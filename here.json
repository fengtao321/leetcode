{"1": {"No": "1", "Name": "Two Sum", "Link": "https://leetcode.com/problems/two-sum/description", "Level": "Easy", "Tags": ["Array", "Hash Table"], "Solutions": {"Python": "1-two-sum.py"}, "Date": ""}, "3": {"No": "3", "Name": "Longest Substring Without Repeating Characters", "Link": "https://leetcode.com/problems/longest-substring-without-repeating-characters/description", "Level": "Medium", "Tags": ["Hash Table", "String", "Sliding Window"], "Solutions": {"Python": "3-longest-substring-without-repeating-characters.py"}, "Date": ""}, "4": {"No": "4", "Name": "Median of Two Sorted Arrays", "Link": "https://leetcode.com/problems/median-of-two-sorted-arrays/description", "Level": "Hard", "Tags": ["Array", "Binary Search", "Divide and Conquer"], "Solutions": {"Java": "4-median-of-two-sorted-arrays.java", "Python": "4-median-of-two-sorted-arrays.py"}, "Date": ""}, "5": {"No": "5", "Name": "Longest Palindromic Substring", "Link": "https://leetcode.com/problems/longest-palindromic-substring/description", "Level": "Medium", "Tags": ["Two Pointers", "String", "Dynamic Programming"], "Solutions": {"Java": "5-longest-palindromic-substring.java", "C++": "5-longest-palindromic-substring.cpp"}, "Date": ""}, "6": {"No": "6", "Name": "Zigzag Conversion", "Link": "https://leetcode.com/problems/zigzag-conversion/description", "Level": "Medium", "Tags": ["String"], "Solutions": {"C++": "6-zigzag-conversion.cpp"}, "Date": ""}, "7": {"No": "7", "Name": "Reverse Integer", "Link": "https://leetcode.com/problems/reverse-integer/description", "Level": "Medium", "Tags": ["Math"], "Solutions": {"C++": "7-reverse-integer.cpp"}, "Date": ""}, "8": {"No": "8", "Name": "String to Integer (atoi)", "Link": "https://leetcode.com/problems/string-to-integer-atoi/description", "Level": "Medium", "Tags": ["String"], "Solutions": {"C++": "8-string-to-integer-atoi.cpp"}, "Date": ""}, "9": {"No": "9", "Name": "Palindrome Number", "Link": "https://leetcode.com/problems/palindrome-number/description", "Level": "Easy", "Tags": ["Math"], "Solutions": {"C++": "9-palindrome-number.cpp"}, "Date": ""}, "10": {"No": "10", "Name": "Regular Expression Matching", "Link": "https://leetcode.com/problems/regular-expression-matching/description", "Level": "Hard", "Tags": ["String", "Dynamic Programming", "Recursion"], "Solutions": {"Python": "10-regular-expression-matching.py"}, "Date": ""}, "11": {"No": "11", "Name": "Container With Most Water", "Link": "https://leetcode.com/problems/container-with-most-water/description", "Level": "Medium", "Tags": ["Array", "Two Pointers", "Greedy"], "Solutions": {"Java": "11-container-with-most-water.java", "C++": "11-container-with-most-water.cpp"}, "Date": ""}, "13": {"No": "13", "Name": "Roman to Integer", "Link": "https://leetcode.com/problems/roman-to-integer/description", "Level": "Easy", "Tags": ["Hash Table", "Math", "String"], "Solutions": {"Java": "13-roman-to-integer.java"}, "Date": ""}, "14": {"No": "14", "Name": "Longest Common Prefix", "Link": "https://leetcode.com/problems/longest-common-prefix/description", "Level": "Easy", "Tags": ["String", "Trie"], "Solutions": {"Python": "14-longest-common-prefix.py"}, "Date": ""}, "15": {"No": "15", "Name": "3Sum", "Link": "https://leetcode.com/problems/3sum/description", "Level": "Medium", "Tags": ["Array", "Two Pointers", "Sorting"], "Solutions": {"C++": "15-3sum.cpp"}, "Date": ""}, "16": {"No": "16", "Name": "3Sum Closest", "Link": "https://leetcode.com/problems/3sum-closest/description", "Level": "Medium", "Tags": ["Array", "Two Pointers", "Sorting"], "Solutions": {"C++": "16-3sum-closest.cpp"}, "Date": ""}, "18": {"No": "18", "Name": "4Sum", "Link": "https://leetcode.com/problems/4sum/description", "Level": "Medium", "Tags": ["Array", "Two Pointers", "Sorting"], "Solutions": {"Python": "18-4sum.py"}, "Date": ""}, "22": {"No": "22", "Name": "Generate Parentheses", "Link": "https://leetcode.com/problems/generate-parentheses/description", "Level": "Medium", "Tags": ["String", "Dynamic Programming", "Backtracking"], "Solutions": {"C++": "22-generate-parentheses.cpp"}, "Date": ""}, "23": {"No": "23", "Name": "Merge k Sorted Lists", "Link": "https://leetcode.com/problems/merge-k-sorted-lists/description", "Level": "Hard", "Tags": ["Linked List", "Divide and Conquer", "Heap (Priority Queue)", "Merge Sort"], "Solutions": {"Java": "23-merge-k-sorted-list.java"}, "Date": ""}, "25": {"No": "25", "Name": "Reverse Nodes in k-Group", "Link": "https://leetcode.com/problems/reverse-nodes-in-k-group/description", "Level": "Hard", "Tags": ["Linked List", "Recursion"], "Solutions": {"Java": "25-reverse-nodes-in-k-group.java"}, "Date": ""}, "26": {"No": "26", "Name": "Remove Duplicates from Sorted Array", "Link": "https://leetcode.com/problems/remove-duplicates-from-sorted-array/description", "Level": "Easy", "Tags": ["Array", "Two Pointers"], "Solutions": {"C++": "26-remove-duplicates-from-sorted-array.cpp"}, "Date": ""}, "27": {"No": "27", "Name": "Remove Element", "Link": "https://leetcode.com/problems/remove-element/description", "Level": "Easy", "Tags": ["Array", "Two Pointers"], "Solutions": {"C++": "27-remove-element.cpp"}, "Date": ""}, "28": {"No": "28", "Name": "Find the Index of the First Occurrence in a String", "Link": "https://leetcode.com/problems/find-the-index-of-the-first-occurrence-in-a-string/description", "Level": "Easy", "Tags": ["Two Pointers", "String", "String Matching"], "Solutions": {"Python": "28-find-the-index-of-the-first-occurrence-in-a-string.py"}, "Date": ""}, "31": {"No": "31", "Name": "Next Permutation", "Link": "https://leetcode.com/problems/next-permutation/description", "Level": "Medium", "Tags": ["Array", "Two Pointers"], "Solutions": {"Java": "31-next-permutation.java", "C++": "31-next-permutation.cpp"}, "Date": ""}, "32": {"No": "32", "Name": "Longest Valid Parentheses", "Link": "https://leetcode.com/problems/longest-valid-parentheses/description", "Level": "Hard", "Tags": ["String", "Dynamic Programming", "Stack"], "Solutions": {"C++": "32-longest-valid-parentheses.cpp"}, "Date": ""}, "33": {"No": "33", "Name": "Search in Rotated Sorted Array", "Link": "https://leetcode.com/problems/search-in-rotated-sorted-array/description", "Level": "Medium", "Tags": ["Array", "Binary Search"], "Solutions": {"Python": "33-search-in-rotated-sorted-array.py", "C++": "33-search-in-rotated-sorted-array.cpp"}, "Date": ""}, "34": {"No": "34", "Name": "Find First and Last Position of Element in Sorted Array", "Link": "https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array/description", "Level": "Medium", "Tags": ["Array", "Binary Search"], "Solutions": {"Python": "34-find-first-and-last-position-of-element-in-sorted-array.py"}, "Date": ""}, "37": {"No": "37", "Name": "Sudoku Solver", "Link": "https://leetcode.com/problems/sudoku-solver/description", "Level": "Hard", "Tags": ["Array", "Hash Table", "Backtracking", "Matrix"], "Solutions": {"Python": "37-sudoku-solver.py"}, "Date": ""}, "41": {"No": "41", "Name": "First Missing Positive", "Link": "https://leetcode.com/problems/first-missing-positive/description", "Level": "Hard", "Tags": ["Array", "Hash Table"], "Solutions": {"Java": "41-first-missing-positive.java"}, "Date": ""}, "42": {"No": "42", "Name": "Trapping Rain Water", "Link": "https://leetcode.com/problems/trapping-rain-water/description", "Level": "Hard", "Tags": ["Array", "Two Pointers", "Dynamic Programming", "Stack", "Monotonic Stack"], "Solutions": {"Python": "42-first-missing-positive.py", "C++": "42-trapping-rain-water.cpp"}, "Date": ""}, "45": {"No": "45", "Name": "Jump Game II", "Link": "https://leetcode.com/problems/jump-game-ii/description", "Level": "Medium", "Tags": ["Array", "Dynamic Programming", "Greedy"], "Solutions": {"C++": "45-jump-game-ii.cpp"}, "Date": ""}, "46": {"No": "46", "Name": "Permutations", "Link": "https://leetcode.com/problems/permutations/description", "Level": "Medium", "Tags": ["Array", "Backtracking"], "Solutions": {"Python": "46-permutations.py"}, "Date": ""}, "48": {"No": "48", "Name": "Rotate Image", "Link": "https://leetcode.com/problems/rotate-image/description", "Level": "Medium", "Tags": ["Array", "Math", "Matrix"], "Solutions": {"C++": "48-rotate-image.cpp"}, "Date": ""}, "49": {"No": "49", "Name": "Group Anagrams", "Link": "https://leetcode.com/problems/group-anagrams/description", "Level": "Medium", "Tags": ["Array", "Hash Table", "String", "Sorting"], "Solutions": {"C++": "49-group-anagrams.cpp"}, "Date": ""}, "50": {"No": "50", "Name": "Pow(x, n)", "Link": "https://leetcode.com/problems/powx-n/description", "Level": "Medium", "Tags": ["Math", "Recursion"], "Solutions": {"C++": "50-powx-n.cpp"}, "Date": ""}, "52": {"No": "52", "Name": "N-Queens II", "Link": "https://leetcode.com/problems/n-queens-ii/description", "Level": "Hard", "Tags": ["Backtracking"], "Solutions": {"Java": "52-n-queens-ii-bit-manipulate.java", "Python": "52-n-queens-ii.py"}, "Date": ""}, "53": {"No": "53", "Name": "Maximum Subarray", "Link": "https://leetcode.com/problems/maximum-subarray/description", "Level": "Medium", "Tags": ["Array", "Divide and Conquer", "Dynamic Programming"], "Solutions": {"C++": "53-maximum-subarray.cpp"}, "Date": ""}, "55": {"No": "55", "Name": "Jump Game", "Link": "https://leetcode.com/problems/jump-game/description", "Level": "Medium", "Tags": ["Array", "Dynamic Programming", "Greedy"], "Solutions": {"C++": "55-jump-game.cpp"}, "Date": ""}, "56": {"No": "56", "Name": "Merge Intervals", "Link": "https://leetcode.com/problems/merge-intervals/description", "Level": "Medium", "Tags": ["Array", "Sorting"], "Solutions": {"Java": "56-merge-intervals.java", "Python": "56-merge-intervals.py"}, "Date": ""}, "58": {"No": "58", "Name": "Length of Last Word", "Link": "https://leetcode.com/problems/length-of-last-word/description", "Level": "Easy", "Tags": ["String"], "Solutions": {"Python": "58-length-of-last-word.py"}, "Date": ""}, "60": {"No": "60", "Name": "Permutation Sequence", "Link": "https://leetcode.com/problems/permutation-sequence/description", "Level": "Hard", "Tags": ["Math", "Recursion"], "Solutions": {"Java": "60-permutation-sequence.java"}, "Date": ""}, "62": {"No": "62", "Name": "Unique Paths", "Link": "https://leetcode.com/problems/unique-paths/description", "Level": "Medium", "Tags": ["Math", "Dynamic Programming", "Combinatorics"], "Solutions": {"Java": "62-unique-paths-2ddp.java", "C++": "62-unique-paths.cpp"}, "Date": ""}, "63": {"No": "63", "Name": "Unique Paths II", "Link": "https://leetcode.com/problems/unique-paths-ii/description", "Level": "Medium", "Tags": ["Array", "Dynamic Programming", "Matrix"], "Solutions": {"Java": "63-unique-paths-ii.java", "C++": "63-unique-paths-ii.cpp"}, "Date": ""}, "64": {"No": "64", "Name": "Minimum Path Sum", "Link": "https://leetcode.com/problems/minimum-path-sum/description", "Level": "Medium", "Tags": ["Array", "Dynamic Programming", "Matrix"], "Solutions": {"C++": "64-minimum-path-sum.cpp"}, "Date": ""}, "70": {"No": "70", "Name": "Climbing Stairs", "Link": "https://leetcode.com/problems/climbing-stairs/description", "Level": "Easy", "Tags": ["Math", "Dynamic Programming", "Memoization"], "Solutions": {"Java": "70-climing-stairs.java", "C++": "70-climbing-stairs.cpp"}, "Date": ""}, "71": {"No": "71", "Name": "Simplify Path", "Link": "https://leetcode.com/problems/simplify-path/description", "Level": "Medium", "Tags": ["String", "Stack"], "Solutions": {"Python": "71-simplify-path.py"}, "Date": ""}, "72": {"No": "72", "Name": "Edit Distance", "Link": "https://leetcode.com/problems/edit-distance/description", "Level": "Medium", "Tags": ["String", "Dynamic Programming"], "Solutions": {"Python": "72-edit-distance.py", "C++": "72-edit-distance.cpp"}, "Date": ""}, "75": {"No": "75", "Name": "Sort Colors", "Link": "https://leetcode.com/problems/sort-colors/description", "Level": "Medium", "Tags": ["Array", "Two Pointers", "Sorting"], "Solutions": {"Python": "75-sort-colors.py", "C++": "75-sort-colors.cpp"}, "Date": ""}, "76": {"No": "76", "Name": "Minimum Window Substring", "Link": "https://leetcode.com/problems/minimum-window-substring/description", "Level": "Hard", "Tags": ["Hash Table", "String", "Sliding Window"], "Solutions": {"Java": "76-minimum-window-substring.java", "Python": "76-minimum-window-substring.py"}, "Date": ""}, "84": {"No": "84", "Name": "Largest Rectangle in Histogram", "Link": "https://leetcode.com/problems/largest-rectangle-in-histogram/description", "Level": "Hard", "Tags": ["Array", "Stack", "Monotonic Stack"], "Solutions": {"Java": "84-largest-rectangle-in-histogram.java"}, "Date": ""}, "91": {"No": "91", "Name": "Decode Ways", "Link": "https://leetcode.com/problems/decode-ways/description", "Level": "Medium", "Tags": ["String", "Dynamic Programming"], "Solutions": {"Java": "91-decode-ways-dp.java"}, "Date": ""}, "92": {"No": "92", "Name": "Reverse Linked List II", "Link": "https://leetcode.com/problems/reverse-linked-list-ii/description", "Level": "Medium", "Tags": ["Linked List"], "Solutions": {"C++": "92-reverse-linked-list-ii.cpp"}, "Date": ""}, "97": {"No": "97", "Name": "Interleaving String", "Link": "https://leetcode.com/problems/interleaving-string/description", "Level": "Medium", "Tags": ["String", "Dynamic Programming"], "Solutions": {"Java": "97-interleaving-string.java"}, "Date": ""}, "115": {"No": "115", "Name": "Distinct Subsequences", "Link": "https://leetcode.com/problems/distinct-subsequences/description", "Level": "Hard", "Tags": ["String", "Dynamic Programming"], "Solutions": {"Python": "115-distince-subsequences.py"}, "Date": ""}, "116": {"No": "116", "Name": "Populating Next Right Pointers in Each Node", "Link": "https://leetcode.com/problems/populating-next-right-pointers-in-each-node/description", "Level": "Medium", "Tags": ["Linked List", "Tree", "Depth-First Search", "Breadth-First Search", "Binary Tree"], "Solutions": {"Python": "116-populating-next-right-pointers-in-each-node.py"}, "Date": ""}, "117": {"No": "117", "Name": "Populating Next Right Pointers in Each Node II", "Link": "https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii/description", "Level": "Medium", "Tags": ["Linked List", "Tree", "Depth-First Search", "Breadth-First Search", "Binary Tree"], "Solutions": {"C++": "117-populating-next-right-pointers-in-each-node-ii.cpp"}, "Date": ""}, "118": {"No": "118", "Name": "Pascal's Triangle", "Link": "https://leetcode.com/problems/pascals-triangle/description", "Level": "Easy", "Tags": ["Array", "Dynamic Programming"], "Solutions": {"Python": "118-pascals-triangle.py", "C++": "118-pascals-triangle.cpp"}, "Date": ""}, "119": {"No": "119", "Name": "Pascal's Triangle II", "Link": "https://leetcode.com/problems/pascals-triangle-ii/description", "Level": "Easy", "Tags": ["Array", "Dynamic Programming"], "Solutions": {"C++": "119-pascals-triangle-ii.cpp"}, "Date": ""}, "120": {"No": "120", "Name": "Triangle", "Link": "https://leetcode.com/problems/triangle/description", "Level": "Medium", "Tags": ["Array", "Dynamic Programming"], "Solutions": {"C++": "120-triangle.cpp"}, "Date": ""}, "121": {"No": "121", "Name": "Best Time to Buy and Sell Stock", "Link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock/description", "Level": "Easy", "Tags": ["Array", "Dynamic Programming"], "Solutions": {"C++": "121-best-time-to-buy-and-sell-stock.cpp"}, "Date": ""}, "122": {"No": "122", "Name": "Best Time to Buy and Sell Stock II", "Link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii/description", "Level": "Medium", "Tags": ["Array", "Dynamic Programming", "Greedy"], "Solutions": {"Python": "122-best-time-to-buy-and-sell-stock-ii.py", "C++": "122-best-time-to-buy-and-sell-stock-ii.cpp"}, "Date": ""}, "123": {"No": "123", "Name": "Best Time to Buy and Sell Stock III", "Link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii/description", "Level": "Hard", "Tags": ["Array", "Dynamic Programming"], "Solutions": {"Python": "123-best-time-to-buy-and-sell-stock-iii.py", "C++": "123-best-time-to-buy-and-sell-stock-iii.cpp"}, "Date": ""}, "124": {"No": "124", "Name": "Binary Tree Maximum Path Sum", "Link": "https://leetcode.com/problems/binary-tree-maximum-path-sum/description", "Level": "Hard", "Tags": ["Dynamic Programming", "Tree", "Depth-First Search", "Binary Tree"], "Solutions": {"Java": "124-binary-tree-maximum-path-sum.java"}, "Date": ""}, "126": {"No": "126", "Name": "Word Ladder II", "Link": "https://leetcode.com/problems/word-ladder-ii/description", "Level": "Hard", "Tags": ["Hash Table", "String", "Backtracking", "Breadth-First Search"], "Solutions": {"Python": "126.py"}, "Date": ""}, "127": {"No": "127", "Name": "Word Ladder", "Link": "https://leetcode.com/problems/word-ladder/description", "Level": "Hard", "Tags": ["Hash Table", "String", "Breadth-First Search"], "Solutions": {"Java": "127-word-ladder.java"}, "Date": ""}, "128": {"No": "128", "Name": "Longest Consecutive Sequence", "Link": "https://leetcode.com/problems/longest-consecutive-sequence/description", "Level": "Medium", "Tags": ["Array", "Hash Table", "Union Find"], "Solutions": {"Java": "128-longest-consecutive-sequence.java", "Python": "128-longest-consecutive-sequence.py"}, "Date": ""}, "130": {"No": "130", "Name": "Surrounded Regions", "Link": "https://leetcode.com/problems/surrounded-regions/description", "Level": "Medium", "Tags": ["Array", "Depth-First Search", "Breadth-First Search", "Union Find", "Matrix"], "Solutions": {"Java": "130-surrounded-regions-set.java"}, "Date": ""}, "133": {"No": "133", "Name": "Clone Graph", "Link": "https://leetcode.com/problems/clone-graph/description", "Level": "Medium", "Tags": ["Hash Table", "Depth-First Search", "Breadth-First Search", "Graph"], "Solutions": {"Java": "133-clone-graph.java"}, "Date": ""}, "139": {"No": "139", "Name": "Word Break", "Link": "https://leetcode.com/problems/word-break/description", "Level": "Medium", "Tags": ["Array", "Hash Table", "String", "Dynamic Programming", "Trie", "Memoization"], "Solutions": {"Java": "139-word-break.java"}, "Date": ""}, "148": {"No": "148", "Name": "Sort List", "Link": "https://leetcode.com/problems/sort-list/description", "Level": "Medium", "Tags": ["Linked List", "Two Pointers", "Divide and Conquer", "Sorting", "Merge Sort"], "Solutions": {"C++": "148-sort-list.cpp"}, "Date": ""}, "150": {"No": "150", "Name": "Evaluate Reverse Polish Notation", "Link": "https://leetcode.com/problems/evaluate-reverse-polish-notation/description", "Level": "Medium", "Tags": ["Array", "Math", "Stack"], "Solutions": {"Java": "150-evaluate-reverse-polish-notation.java"}, "Date": ""}, "152": {"No": "152", "Name": "Maximum Product Subarray", "Link": "https://leetcode.com/problems/maximum-product-subarray/description", "Level": "Medium", "Tags": ["Array", "Dynamic Programming"], "Solutions": {"Java": "152-maximum-product-subarray-prefix.java"}, "Date": ""}, "155": {"No": "155", "Name": "Min Stack", "Link": "https://leetcode.com/problems/min-stack/description", "Level": "Medium", "Tags": ["Stack", "Design"], "Solutions": {"Java": "155-min-stack.java"}, "Date": ""}, "179": {"No": "179", "Name": "Largest Number", "Link": "https://leetcode.com/problems/largest-number/description", "Level": "Medium", "Tags": ["Array", "String", "Greedy", "Sorting"], "Solutions": {"Python": "179-largest-number.py"}, "Date": ""}, "187": {"No": "187", "Name": "Repeated DNA Sequences", "Link": "https://leetcode.com/problems/repeated-dna-sequences/description", "Level": "Medium", "Tags": ["Hash Table", "String", "Bit Manipulation", "Sliding Window", "Rolling Hash", "Hash Function"], "Solutions": {"Python": "187-repeated-dna-sequences.py"}, "Date": ""}, "188": {"No": "188", "Name": "Best Time to Buy and Sell Stock IV", "Link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv/description", "Level": "Hard", "Tags": ["Array", "Dynamic Programming"], "Solutions": {"Python": "188-best-time-to-buy-and-sell-stock-iv.py", "C++": "188-best-time-to-buy-and-sell-stock-iv.cpp"}, "Date": ""}, "189": {"No": "189", "Name": "Rotate Array", "Link": "https://leetcode.com/problems/rotate-array/description", "Level": "Medium", "Tags": ["Array", "Math", "Two Pointers"], "Solutions": {"Python": "189-rotate-array.py"}, "Date": ""}, "200": {"No": "200", "Name": "Number of Islands", "Link": "https://leetcode.com/problems/number-of-islands/description", "Level": "Medium", "Tags": ["Array", "Depth-First Search", "Breadth-First Search", "Union Find", "Matrix"], "Solutions": {"Java": "200-number-of-islands-fast-solution.java"}, "Date": ""}, "203": {"No": "203", "Name": "Remove Linked List Elements", "Link": "https://leetcode.com/problems/remove-linked-list-elements/description", "Level": "Easy", "Tags": ["Linked List", "Recursion"], "Solutions": {"C++": "203-remove-linked-list-elements.cpp"}, "Date": ""}, "206": {"No": "206", "Name": "Reverse Linked List", "Link": "https://leetcode.com/problems/reverse-linked-list/description", "Level": "Easy", "Tags": ["Linked List", "Recursion"], "Solutions": {"C++": "206-reverse-linked-list.cpp"}, "Date": ""}, "207": {"No": "207", "Name": "Course Schedule", "Link": "https://leetcode.com/problems/course-schedule/description", "Level": "Medium", "Tags": ["Depth-First Search", "Breadth-First Search", "Graph", "Topological Sort"], "Solutions": {"Java": "207-course-schedule-dfs.java"}, "Date": ""}, "209": {"No": "209", "Name": "Minimum Size Subarray Sum", "Link": "https://leetcode.com/problems/minimum-size-subarray-sum/description", "Level": "Medium", "Tags": ["Array", "Binary Search", "Sliding Window", "Prefix Sum"], "Solutions": {"Python": "209-minimum-size-subarray-sum.py"}, "Date": ""}, "210": {"No": "210", "Name": "Course Schedule II", "Link": "https://leetcode.com/problems/course-schedule-ii/description", "Level": "Medium", "Tags": ["Depth-First Search", "Breadth-First Search", "Graph", "Topological Sort"], "Solutions": {"Java": "210-course-schedule-II.java", "Python": "210-course-schedule-ii.py"}, "Date": ""}, "211": {"No": "211", "Name": "Design Add and Search Words Data Structure", "Link": "https://leetcode.com/problems/design-add-and-search-words-data-structure/description", "Level": "Medium", "Tags": ["String", "Depth-First Search", "Design", "Trie"], "Solutions": {"Python": "211-design-add-and-search-words-data-structure.py"}, "Date": ""}, "212": {"No": "212", "Name": "Word Search II", "Link": "https://leetcode.com/problems/word-search-ii/description", "Level": "Hard", "Tags": ["Array", "String", "Backtracking", "Trie", "Matrix"], "Solutions": {"Java": "212-word-search-ii.java"}, "Date": ""}, "217": {"No": "217", "Name": "Contains Duplicate", "Link": "https://leetcode.com/problems/contains-duplicate/description", "Level": "Easy", "Tags": ["Array", "Hash Table", "Sorting"], "Solutions": {"Python": "217-contains-duplicate.py", "C++": "217-contains-duplicate.cpp"}, "Date": ""}, "218": {"No": "218", "Name": "The Skyline Problem", "Link": "https://leetcode.com/problems/the-skyline-problem/description", "Level": "Hard", "Tags": ["Array", "Divide and Conquer", "Binary Indexed Tree", "Segment Tree", "Line Sweep", "Heap (Priority Queue)", "Ordered Set"], "Solutions": {"Java": "218-the-skyline-problem.java"}, "Date": ""}, "219": {"No": "219", "Name": "Contains Duplicate II", "Link": "https://leetcode.com/problems/contains-duplicate-ii/description", "Level": "Easy", "Tags": ["Array", "Hash Table", "Sliding Window"], "Solutions": {"C++": "219-contains-duplicate-ii.cpp"}, "Date": ""}, "225": {"No": "225", "Name": "Implement Stack using Queues", "Link": "https://leetcode.com/problems/implement-stack-using-queues/description", "Level": "Easy", "Tags": ["Stack", "Design", "Queue"], "Solutions": {"Python": "225-implement-stack-using-queues.py"}, "Date": ""}, "237": {"No": "237", "Name": "Delete Node in a Linked List", "Link": "https://leetcode.com/problems/delete-node-in-a-linked-list/description", "Level": "Medium", "Tags": ["Linked List"], "Solutions": {"C++": "237-delete-node-in-a-linked-list.cpp"}, "Date": ""}, "239": {"No": "239", "Name": "Sliding Window Maximum", "Link": "https://leetcode.com/problems/sliding-window-maximum/description", "Level": "Hard", "Tags": ["Array", "Queue", "Sliding Window", "Heap (Priority Queue)", "Monotonic Queue"], "Solutions": {"Java": "239-sliding-window-maximum-priorityqueue.java"}, "Date": ""}, "241": {"No": "241", "Name": "Different Ways to Add Parentheses", "Link": "https://leetcode.com/problems/different-ways-to-add-parentheses/description", "Level": "Medium", "Tags": ["Math", "String", "Dynamic Programming", "Recursion", "Memoization"], "Solutions": {"Python": "241-different-ways-to-add-parentheses.py", "C++": "241.cpp"}, "Date": ""}, "242": {"No": "242", "Name": "Valid Anagram", "Link": "https://leetcode.com/problems/valid-anagram/description", "Level": "Easy", "Tags": ["Hash Table", "String", "Sorting"], "Solutions": {"Python": "242-valid-anagram-dictionary.py", "C++": "242-valid-anagram.cpp"}, "Date": ""}, "256": {"No": "256", "Name": "Paint House", "Link": "https://leetcode.com/problems/paint-house/description", "Level": "Medium", "Tags": ["Array", "Dynamic Programming"], "Solutions": {"Java": "256-walls-and-gates.java"}, "Date": ""}, "261": {"No": "261", "Name": "Graph Valid Tree", "Link": "https://leetcode.com/problems/graph-valid-tree/description", "Level": "Medium", "Tags": ["Depth-First Search", "Breadth-First Search", "Union Find", "Graph"], "Solutions": {"Java": "261-graph-valid-tree.java", "Python": "261-graph-valid-tree.py"}, "Date": ""}, "268": {"No": "268", "Name": "Missing Number", "Link": "https://leetcode.com/problems/missing-number/description", "Level": "Easy", "Tags": ["Array", "Hash Table", "Math", "Binary Search", "Bit Manipulation", "Sorting"], "Solutions": {"Java": "268-missing-number.java"}, "Date": ""}, "269": {"No": "269", "Name": "Alien Dictionary", "Link": "https://leetcode.com/problems/alien-dictionary/description", "Level": "Hard", "Tags": ["Array", "String", "Depth-First Search", "Breadth-First Search", "Graph", "Topological Sort"], "Solutions": {"Python": "269-alien-dictionary.py"}, "Date": ""}, "280": {"No": "280", "Name": "Wiggle Sort", "Link": "https://leetcode.com/problems/wiggle-sort/description", "Level": "Medium", "Tags": ["Array", "Greedy", "Sorting"], "Solutions": {"Python": "280-wiggle-sort.py"}, "Date": ""}, "287": {"No": "287", "Name": "Find the Duplicate Number", "Link": "https://leetcode.com/problems/find-the-duplicate-number/description", "Level": "Medium", "Tags": ["Array", "Two Pointers", "Binary Search", "Bit Manipulation"], "Solutions": {"Java": "287-find-the-duplicate-number.java"}, "Date": ""}, "300": {"No": "300", "Name": "Longest Increasing Subsequence", "Link": "https://leetcode.com/problems/longest-increasing-subsequence/description", "Level": "Medium", "Tags": ["Array", "Binary Search", "Dynamic Programming"], "Solutions": {"Java": "300-longest-increasing-subsequence.java"}, "Date": ""}, "301": {"No": "301", "Name": "Remove Invalid Parentheses", "Link": "https://leetcode.com/problems/remove-invalid-parentheses/description", "Level": "Hard", "Tags": ["String", "Backtracking", "Breadth-First Search"], "Solutions": {"Python": "301-remove-invalid-parentheses.py"}, "Date": ""}, "304": {"No": "304", "Name": "Range Sum Query 2D - Immutable", "Link": "https://leetcode.com/problems/range-sum-query-2d-immutable/description", "Level": "Medium", "Tags": ["Array", "Design", "Matrix", "Prefix Sum"], "Solutions": {"Python": "304-range-sum-query-2d-immutable.py"}, "Date": ""}, "306": {"No": "306", "Name": "Additive Number", "Link": "https://leetcode.com/problems/additive-number/description", "Level": "Medium", "Tags": ["String", "Backtracking"], "Solutions": {"C++": "306-additive-number.cpp"}, "Date": ""}, "307": {"No": "307", "Name": "Range Sum Query - Mutable", "Link": "https://leetcode.com/problems/range-sum-query-mutable/description", "Level": "Medium", "Tags": ["Array", "Design", "Binary Indexed Tree", "Segment Tree"], "Solutions": {"Java": "307-range-sum-query-mutable.java"}, "Date": ""}, "309": {"No": "309", "Name": "Best Time to Buy and Sell Stock with Cooldown", "Link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown/description", "Level": "Medium", "Tags": ["Array", "Dynamic Programming"], "Solutions": {"Java": "309-best-time-to-buy-and-sell-stock-with-cooldown-stupid.java"}, "Date": ""}, "310": {"No": "310", "Name": "Minimum Height Trees", "Link": "https://leetcode.com/problems/minimum-height-trees/description", "Level": "Medium", "Tags": ["Depth-First Search", "Breadth-First Search", "Graph", "Topological Sort"], "Solutions": {"Java": "310-minimum-height-trees.java"}, "Date": ""}, "312": {"No": "312", "Name": "Burst Balloons", "Link": "https://leetcode.com/problems/burst-balloons/description", "Level": "Hard", "Tags": ["Array", "Dynamic Programming"], "Solutions": {"Python": "312-burst-balloons-dictionary-lrucache.py"}, "Date": ""}, "322": {"No": "322", "Name": "Coin Change", "Link": "https://leetcode.com/problems/coin-change/description", "Level": "Medium", "Tags": ["Array", "Dynamic Programming", "Breadth-First Search"], "Solutions": {"Java": "322-coin-change.java"}, "Date": ""}, "323": {"No": "323", "Name": "Number of Connected Components in an Undirected Graph", "Link": "https://leetcode.com/problems/number-of-connected-components-in-an-undirected-graph/description", "Level": "Medium", "Tags": ["Depth-First Search", "Breadth-First Search", "Union Find", "Graph"], "Solutions": {"Java": "323-number-of-connected-components-in-an-undirected-graph-unit-find.java"}, "Date": ""}, "329": {"No": "329", "Name": "Longest Increasing Path in a Matrix", "Link": "https://leetcode.com/problems/longest-increasing-path-in-a-matrix/description", "Level": "Hard", "Tags": ["Array", "Dynamic Programming", "Depth-First Search", "Breadth-First Search", "Graph", "Topological Sort", "Memoization", "Matrix"], "Solutions": {"Java": "329-longest-increasing-path-in-a-matrix.java", "Python": "329-longest-increasing-path-in-a-matrix.py"}, "Date": ""}, "332": {"No": "332", "Name": "Reconstruct Itinerary", "Link": "https://leetcode.com/problems/reconstruct-itinerary/description", "Level": "Hard", "Tags": ["Depth-First Search", "Graph", "Eulerian Circuit"], "Solutions": {"Python": "332-reconstruct-itinerary.py"}, "Date": ""}, "355": {"No": "355", "Name": "Design Twitter", "Link": "https://leetcode.com/problems/design-twitter/description", "Level": "Medium", "Tags": ["Hash Table", "Linked List", "Design", "Heap (Priority Queue)"], "Solutions": {"Java": "355-design-twitter.java"}, "Date": ""}, "380": {"No": "380", "Name": "Insert Delete GetRandom O(1)", "Link": "https://leetcode.com/problems/insert-delete-getrandom-o1/description", "Level": "Medium", "Tags": ["Array", "Hash Table", "Math", "Design", "Randomized"], "Solutions": {"Python": "380-insert-delete-getrandom-o1.py"}, "Date": ""}, "386": {"No": "386", "Name": "Lexicographical Numbers", "Link": "https://leetcode.com/problems/lexicographical-numbers/description", "Level": "Medium", "Tags": ["Depth-First Search", "Trie"], "Solutions": {"Python": "386-lexicographical-numbers.py", "C++": "386-lexicographical-number.cpp"}, "Date": ""}, "392": {"No": "392", "Name": "Is Subsequence", "Link": "https://leetcode.com/problems/is-subsequence/description", "Level": "Easy", "Tags": ["Two Pointers", "String", "Dynamic Programming"], "Solutions": {"Python": "392-is-subsequence.py"}, "Date": ""}, "394": {"No": "394", "Name": "Decode String", "Link": "https://leetcode.com/problems/decode-string/description", "Level": "Medium", "Tags": ["String", "Stack", "Recursion"], "Solutions": {"Python": "394-decode-string.py"}, "Date": ""}, "402": {"No": "402", "Name": "Remove K Digits", "Link": "https://leetcode.com/problems/remove-k-digits/description", "Level": "Medium", "Tags": ["String", "Stack", "Greedy", "Monotonic Stack"], "Solutions": {"Python": "402-remove-k-digits.py"}, "Date": ""}, "410": {"No": "410", "Name": "Split Array Largest Sum", "Link": "https://leetcode.com/problems/split-array-largest-sum/description", "Level": "Hard", "Tags": ["Array", "Binary Search", "Dynamic Programming", "Greedy", "Prefix Sum"], "Solutions": {"Python": "410-split-array-largest-sum-dp.py"}, "Date": ""}, "416": {"No": "416", "Name": "Partition Equal Subset Sum", "Link": "https://leetcode.com/problems/partition-equal-subset-sum/description", "Level": "Medium", "Tags": ["Array", "Dynamic Programming"], "Solutions": {"Java": "416-partition-equal-subset-sum-dp.java"}, "Date": ""}, "417": {"No": "417", "Name": "Pacific Atlantic Water Flow", "Link": "https://leetcode.com/problems/pacific-atlantic-water-flow/description", "Level": "Medium", "Tags": ["Array", "Depth-First Search", "Breadth-First Search", "Matrix"], "Solutions": {"Java": "417-pacific-atlantic-water-flow-simple.java"}, "Date": ""}, "424": {"No": "424", "Name": "Longest Repeating Character Replacement", "Link": "https://leetcode.com/problems/longest-repeating-character-replacement/description", "Level": "Medium", "Tags": ["Hash Table", "String", "Sliding Window"], "Solutions": {"Java": "424-longest-repeating-character-replacement.java", "Python": "424-longest-repeating-character-replacement.py"}, "Date": ""}, "438": {"No": "438", "Name": "Find All Anagrams in a String", "Link": "https://leetcode.com/problems/find-all-anagrams-in-a-string/description", "Level": "Medium", "Tags": ["Hash Table", "String", "Sliding Window"], "Solutions": {"Python": "438-find-all-anagrams-in-a-string.py"}, "Date": ""}, "448": {"No": "448", "Name": "Find All Numbers Disappeared in an Array", "Link": "https://leetcode.com/problems/find-all-numbers-disappeared-in-an-array/description", "Level": "Easy", "Tags": ["Array", "Hash Table"], "Solutions": {"Java": "448-find-all-numbers-disappeared-in-an-array.java"}, "Date": ""}, "456": {"No": "456", "Name": "132 Pattern", "Link": "https://leetcode.com/problems/132-pattern/description", "Level": "Medium", "Tags": ["Array", "Binary Search", "Stack", "Monotonic Stack", "Ordered Set"], "Solutions": {"Python": "456-132-pattern.py"}, "Date": ""}, "494": {"No": "494", "Name": "Target Sum", "Link": "https://leetcode.com/problems/target-sum/description", "Level": "Medium", "Tags": ["Array", "Dynamic Programming", "Backtracking"], "Solutions": {"Java": "494-target-sum-prefix.java"}, "Date": ""}, "506": {"No": "506", "Name": "Relative Ranks", "Link": "https://leetcode.com/problems/relative-ranks/description", "Level": "Easy", "Tags": ["Array", "Sorting", "Heap (Priority Queue)"], "Solutions": {"Python": "506-subarray-sum-equals-k.py", "C++": "506-fibonacci-number.cpp"}, "Date": ""}, "516": {"No": "516", "Name": "Longest Palindromic Subsequence", "Link": "https://leetcode.com/problems/longest-palindromic-subsequence/description", "Level": "Medium", "Tags": ["String", "Dynamic Programming"], "Solutions": {"Python": "516-longest-palindromic-subsequence.py"}, "Date": ""}, "518": {"No": "518", "Name": "Coin Change II", "Link": "https://leetcode.com/problems/coin-change-ii/description", "Level": "Medium", "Tags": ["Array", "Dynamic Programming"], "Solutions": {"Java": "518-coin-change-ii.java"}, "Date": ""}, "523": {"No": "523", "Name": "Continuous Subarray Sum", "Link": "https://leetcode.com/problems/continuous-subarray-sum/description", "Level": "Medium", "Tags": ["Array", "Hash Table", "Math", "Prefix Sum"], "Solutions": {"Python": "523-continuous-subarray-sum.py"}, "Date": ""}, "524": {"No": "524", "Name": "Longest Word in Dictionary through Deleting", "Link": "https://leetcode.com/problems/longest-word-in-dictionary-through-deleting/description", "Level": "Medium", "Tags": ["Array", "Two Pointers", "String", "Sorting"], "Solutions": {"Java": "524-longest-word-in-dictionary-through-deleting.java"}, "Date": ""}, "525": {"No": "525", "Name": "Contiguous Array", "Link": "https://leetcode.com/problems/contiguous-array/description", "Level": "Medium", "Tags": ["Array", "Hash Table", "Prefix Sum"], "Solutions": {"Java": "525-contiguous-array.java"}, "Date": ""}, "535": {"No": "535", "Name": "Encode and Decode TinyURL", "Link": "https://leetcode.com/problems/encode-and-decode-tinyurl/description", "Level": "Medium", "Tags": ["Hash Table", "String", "Design", "Hash Function"], "Solutions": {"Python": "535-encode-and-decode-tinyurl.py"}, "Date": ""}, "539": {"No": "539", "Name": "Minimum Time Difference", "Link": "https://leetcode.com/problems/minimum-time-difference/description", "Level": "Medium", "Tags": ["Array", "Math", "String", "Sorting"], "Solutions": {"Java": "539-minimum-time-difference.java", "Python": "539-minimum-time-difference.py", "C++": "539-minimum-time-difference.cpp"}, "Date": ""}, "546": {"No": "546", "Name": "Remove Boxes", "Link": "https://leetcode.com/problems/remove-boxes/description", "Level": "Hard", "Tags": ["Array", "Dynamic Programming", "Memoization"], "Solutions": {"Java": "546-remove-boxes.java"}, "Date": ""}, "551": {"No": "551", "Name": "Student Attendance Record I", "Link": "https://leetcode.com/problems/student-attendance-record-i/description", "Level": "Easy", "Tags": ["String"], "Solutions": {"Java": "551-student-attendance-record-i.java"}, "Date": ""}, "552": {"No": "552", "Name": "Student Attendance Record II", "Link": "https://leetcode.com/problems/student-attendance-record-ii/description", "Level": "Hard", "Tags": ["Dynamic Programming"], "Solutions": {"Java": "552-student-attendance-record-ii-dynamic-programming.java"}, "Date": ""}, "554": {"No": "554", "Name": "Brick Wall", "Link": "https://leetcode.com/problems/brick-wall/description", "Level": "Medium", "Tags": ["Array", "Hash Table"], "Solutions": {"Python": "554-brick-wall.py"}, "Date": ""}, "567": {"No": "567", "Name": "Permutation in String", "Link": "https://leetcode.com/problems/permutation-in-string/description", "Level": "Medium", "Tags": ["Hash Table", "Two Pointers", "String", "Sliding Window"], "Solutions": {"Java": "567-permutation-in-string.java"}, "Date": ""}, "605": {"No": "605", "Name": "Can Place Flowers", "Link": "https://leetcode.com/problems/can-place-flowers/description", "Level": "Easy", "Tags": ["Array", "Greedy"], "Solutions": {"Python": "605-can-place-flowers.py"}, "Date": ""}, "647": {"No": "647", "Name": "Palindromic Substrings", "Link": "https://leetcode.com/problems/palindromic-substrings/description", "Level": "Medium", "Tags": ["Two Pointers", "String", "Dynamic Programming"], "Solutions": {"Java": "647-palindromic-substrings.java"}, "Date": ""}, "658": {"No": "658", "Name": "Find K Closest Elements", "Link": "https://leetcode.com/problems/find-k-closest-elements/description", "Level": "Medium", "Tags": ["Array", "Two Pointers", "Binary Search", "Sliding Window", "Sorting", "Heap (Priority Queue)"], "Solutions": {"Python": "658-find-k-closest-elements.py"}, "Date": ""}, "665": {"No": "665", "Name": "Non-decreasing Array", "Link": "https://leetcode.com/problems/non-decreasing-array/description", "Level": "Medium", "Tags": ["Array"], "Solutions": {"Python": "665-non-decreasing-array.py"}, "Date": ""}, "682": {"No": "682", "Name": "Baseball Game", "Link": "https://leetcode.com/problems/baseball-game/description", "Level": "Easy", "Tags": ["Array", "Stack", "Simulation"], "Solutions": {"Python": "682-baseball-game.py"}, "Date": ""}, "684": {"No": "684", "Name": "Redundant Connection", "Link": "https://leetcode.com/problems/redundant-connection/description", "Level": "Medium", "Tags": ["Depth-First Search", "Breadth-First Search", "Union Find", "Graph"], "Solutions": {"Java": "684-redundant-connection-unit-find-alg.java"}, "Date": ""}, "691": {"No": "691", "Name": "Stickers to Spell Word", "Link": "https://leetcode.com/problems/stickers-to-spell-word/description", "Level": "Hard", "Tags": ["Array", "String", "Dynamic Programming", "Backtracking", "Bit Manipulation", "Bitmask"], "Solutions": {"Python": "691-stickers-to-spell-word.py"}, "Date": ""}, "695": {"No": "695", "Name": "Max Area of Island", "Link": "https://leetcode.com/problems/max-area-of-island/description", "Level": "Medium", "Tags": ["Array", "Depth-First Search", "Breadth-First Search", "Union Find", "Matrix"], "Solutions": {"Java": "695-max-area-of-island.java"}, "Date": ""}, "699": {"No": "699", "Name": "Falling Squares", "Link": "https://leetcode.com/problems/falling-squares/description", "Level": "Hard", "Tags": ["Array", "Segment Tree", "Ordered Set"], "Solutions": {"Java": "699-falling-squares.java"}, "Date": ""}, "715": {"No": "715", "Name": "Range Module", "Link": "https://leetcode.com/problems/range-module/description", "Level": "Hard", "Tags": ["Design", "Segment Tree", "Ordered Set"], "Solutions": {"Java": "715-range-module.java"}, "Date": ""}, "718": {"No": "718", "Name": "Maximum Length of Repeated Subarray", "Link": "https://leetcode.com/problems/maximum-length-of-repeated-subarray/description", "Level": "Medium", "Tags": ["Array", "Binary Search", "Dynamic Programming", "Sliding Window", "Rolling Hash", "Hash Function"], "Solutions": {"Python": "718-maximum-length-of-repeated-subarray.py"}, "Date": ""}, "720": {"No": "720", "Name": "Longest Word in Dictionary", "Link": "https://leetcode.com/problems/longest-word-in-dictionary/description", "Level": "Medium", "Tags": ["Array", "Hash Table", "String", "Trie", "Sorting"], "Solutions": {"Java": "720-longest-word-in-dictionary.java"}, "Date": ""}, "729": {"No": "729", "Name": "My Calendar I", "Link": "https://leetcode.com/problems/my-calendar-i/description", "Level": "Medium", "Tags": ["Array", "Binary Search", "Design", "Segment Tree", "Ordered Set"], "Solutions": {"Java": "729-my-calendar-i.java"}, "Date": ""}, "731": {"No": "731", "Name": "My Calendar II", "Link": "https://leetcode.com/problems/my-calendar-ii/description", "Level": "Medium", "Tags": ["Array", "Binary Search", "Design", "Segment Tree", "Prefix Sum", "Ordered Set"], "Solutions": {"Java": "731-my-calendar-ii.java"}, "Date": ""}, "732": {"No": "732", "Name": "My Calendar III", "Link": "https://leetcode.com/problems/my-calendar-iii/description", "Level": "Hard", "Tags": ["Binary Search", "Design", "Segment Tree", "Prefix Sum", "Ordered Set"], "Solutions": {"Java": "732-my-calendar-iii.java"}, "Date": ""}, "735": {"No": "735", "Name": "Asteroid Collision", "Link": "https://leetcode.com/problems/asteroid-collision/description", "Level": "Medium", "Tags": ["Array", "Stack", "Simulation"], "Solutions": {"Python": "735-asteroid-collision.py"}, "Date": ""}, "739": {"No": "739", "Name": "Daily Temperatures", "Link": "https://leetcode.com/problems/daily-temperatures/description", "Level": "Medium", "Tags": ["Array", "Stack", "Monotonic Stack"], "Solutions": {"Java": "739-daily-temperatures.java"}, "Date": ""}, "743": {"No": "743", "Name": "Network Delay Time", "Link": "https://leetcode.com/problems/network-delay-time/description", "Level": "Medium", "Tags": ["Depth-First Search", "Breadth-First Search", "Graph", "Heap (Priority Queue)", "Shortest Path"], "Solutions": {"Java": "743-network-delay.java"}, "Date": ""}, "746": {"No": "746", "Name": "Min Cost Climbing Stairs", "Link": "https://leetcode.com/problems/min-cost-climbing-stairs/description", "Level": "Easy", "Tags": ["Array", "Dynamic Programming"], "Solutions": {"C++": "746-min-cost-climbing-stairs.cpp"}, "Date": ""}, "764": {"No": "764", "Name": "Largest Plus Sign", "Link": "https://leetcode.com/problems/largest-plus-sign/description", "Level": "Medium", "Tags": ["Array", "Dynamic Programming"], "Solutions": {"Java": "764-min-cost-climing-stairs.java"}, "Date": ""}, "777": {"No": "777", "Name": "Swap Adjacent in LR String", "Link": "https://leetcode.com/problems/swap-adjacent-in-lr-string/description", "Level": "Medium", "Tags": ["Two Pointers", "String"], "Solutions": {"Java": "777-swap-adjacent-in-lr-string.java"}, "Date": ""}, "778": {"No": "778", "Name": "Swim in Rising Water", "Link": "https://leetcode.com/problems/swim-in-rising-water/description", "Level": "Hard", "Tags": ["Array", "Binary Search", "Depth-First Search", "Breadth-First Search", "Union Find", "Heap (Priority Queue)", "Matrix"], "Solutions": {"Python": "778-swim-in-rising-water.py"}, "Date": ""}, "787": {"No": "787", "Name": "Cheapest Flights Within K Stops", "Link": "https://leetcode.com/problems/cheapest-flights-within-k-stops/description", "Level": "Medium", "Tags": ["Dynamic Programming", "Depth-First Search", "Breadth-First Search", "Graph", "Heap (Priority Queue)", "Shortest Path"], "Solutions": {"Python": "787-cheapest-flights-within-k-stops.py"}, "Date": ""}, "792": {"No": "792", "Name": "Number of Matching Subsequences", "Link": "https://leetcode.com/problems/number-of-matching-subsequences/description", "Level": "Medium", "Tags": ["Array", "Hash Table", "String", "Binary Search", "Dynamic Programming", "Trie", "Sorting"], "Solutions": {"Java": "792-number-of-matching-subsequences-treeset.java"}, "Date": ""}, "802": {"No": "802", "Name": "Find Eventual Safe States", "Link": "https://leetcode.com/problems/find-eventual-safe-states/description", "Level": "Medium", "Tags": ["Depth-First Search", "Breadth-First Search", "Graph", "Topological Sort"], "Solutions": {"Python": "802-find-eventual-safe-state-dp.py"}, "Date": ""}, "818": {"No": "818", "Name": "Race Car", "Link": "https://leetcode.com/problems/race-car/description", "Level": "Hard", "Tags": ["Dynamic Programming"], "Solutions": {"Java": "818-race-car.java"}, "Date": ""}, "834": {"No": "834", "Name": "Sum of Distances in Tree", "Link": "https://leetcode.com/problems/sum-of-distances-in-tree/description", "Level": "Hard", "Tags": ["Dynamic Programming", "Tree", "Depth-First Search", "Graph"], "Solutions": {"Java": "834-sum-of-distances-in-tree.java", "Python": "834-sum-of-distances-in-tree.py"}, "Date": ""}, "838": {"No": "838", "Name": "Push Dominoes", "Link": "https://leetcode.com/problems/push-dominoes/description", "Level": "Medium", "Tags": ["Two Pointers", "String", "Dynamic Programming"], "Solutions": {"Python": "838-push-dominoes.py"}, "Date": ""}, "842": {"No": "842", "Name": "Split Array into Fibonacci Sequence", "Link": "https://leetcode.com/problems/split-array-into-fibonacci-sequence/description", "Level": "Medium", "Tags": ["String", "Backtracking"], "Solutions": {"C++": "842-split-array-into-fibonacci-sequence.cpp"}, "Date": ""}, "845": {"No": "845", "Name": "Longest Mountain in Array", "Link": "https://leetcode.com/problems/longest-mountain-in-array/description", "Level": "Medium", "Tags": ["Array", "Two Pointers", "Dynamic Programming", "Enumeration"], "Solutions": {"Java": "845-longest-mountain-in-array-promotion.java"}, "Date": ""}, "853": {"No": "853", "Name": "Car Fleet", "Link": "https://leetcode.com/problems/car-fleet/description", "Level": "Medium", "Tags": ["Array", "Stack", "Sorting", "Monotonic Stack"], "Solutions": {"Python": "853.py"}, "Date": ""}, "862": {"No": "862", "Name": "Shortest Subarray with Sum at Least K", "Link": "https://leetcode.com/problems/shortest-subarray-with-sum-at-least-k/description", "Level": "Hard", "Tags": ["Array", "Binary Search", "Queue", "Sliding Window", "Heap (Priority Queue)", "Prefix Sum", "Monotonic Queue"], "Solutions": {"Java": "862-shortest-subarray-with-sum-at-least-k.java"}, "Date": ""}, "875": {"No": "875", "Name": "Koko Eating Bananas", "Link": "https://leetcode.com/problems/koko-eating-bananas/description", "Level": "Medium", "Tags": ["Array", "Binary Search"], "Solutions": {"Java": "875-koko-eating-bananas.java"}, "Date": ""}, "881": {"No": "881", "Name": "Boats to Save People", "Link": "https://leetcode.com/problems/boats-to-save-people/description", "Level": "Medium", "Tags": ["Array", "Two Pointers", "Greedy", "Sorting"], "Solutions": {"Python": "881-boats-to-save-people.py"}, "Date": ""}, "895": {"No": "895", "Name": "Maximum Frequency Stack", "Link": "https://leetcode.com/problems/maximum-frequency-stack/description", "Level": "Hard", "Tags": ["Hash Table", "Stack", "Design", "Ordered Set"], "Solutions": {"Java": "895-maximum-frequency-stack.java", "Python": "895-maximum-frequency-stack.py"}, "Date": ""}, "899": {"No": "899", "Name": "Orderly Queue", "Link": "https://leetcode.com/problems/orderly-queue/description", "Level": "Hard", "Tags": ["Math", "String", "Sorting"], "Solutions": {"Python": "899-orderly-queue.py"}, "Date": ""}, "901": {"No": "901", "Name": "Online Stock Span", "Link": "https://leetcode.com/problems/online-stock-span/description", "Level": "Medium", "Tags": ["Stack", "Design", "Monotonic Stack", "Data Stream"], "Solutions": {"Python": "901-online-stock-span.py"}, "Date": ""}, "907": {"No": "907", "Name": "Sum of Subarray Minimums", "Link": "https://leetcode.com/problems/sum-of-subarray-minimums/description", "Level": "Medium", "Tags": ["Array", "Dynamic Programming", "Stack", "Monotonic Stack"], "Solutions": {"Java": "907-sum-of-subarray-minimums-stack.java"}, "Date": ""}, "913": {"No": "913", "Name": "Cat and Mouse", "Link": "https://leetcode.com/problems/cat-and-mouse/description", "Level": "Hard", "Tags": ["Math", "Dynamic Programming", "Graph", "Topological Sort", "Memoization", "Game Theory"], "Solutions": {"Java": "913-cat-and-mouse-bottom-up.java"}, "Date": ""}, "947": {"No": "947", "Name": "Most Stones Removed with Same Row or Column", "Link": "https://leetcode.com/problems/most-stones-removed-with-same-row-or-column/description", "Level": "Medium", "Tags": ["Hash Table", "Depth-First Search", "Union Find", "Graph"], "Solutions": {"Java": "947-most-stones-removed-with-same-row-or-column.java"}, "Date": ""}, "959": {"No": "959", "Name": "Regions Cut By Slashes", "Link": "https://leetcode.com/problems/regions-cut-by-slashes/description", "Level": "Medium", "Tags": ["Array", "Hash Table", "Depth-First Search", "Breadth-First Search", "Union Find", "Matrix"], "Solutions": {"Java": "959-regions-cut-by-slashes.java"}, "Date": ""}, "974": {"No": "974", "Name": "Subarray Sums Divisible by K", "Link": "https://leetcode.com/problems/subarray-sums-divisible-by-k/description", "Level": "Medium", "Tags": ["Array", "Hash Table", "Prefix Sum"], "Solutions": {"Java": "974-subarray-sums-divisible-by-k.java"}, "Date": ""}, "980": {"No": "980", "Name": "Unique Paths III", "Link": "https://leetcode.com/problems/unique-paths-iii/description", "Level": "Hard", "Tags": ["Array", "Backtracking", "Bit Manipulation", "Matrix"], "Solutions": {"Java": "980-unique-paths-iii-backtrack.java", "C++": "980-unique-paths-iii.cpp"}, "Date": ""}, "994": {"No": "994", "Name": "Rotting Oranges", "Link": "https://leetcode.com/problems/rotting-oranges/description", "Level": "Medium", "Tags": ["Array", "Breadth-First Search", "Matrix"], "Solutions": {"Java": "994-rotting-oranges.java", "Python": "994-rotting-oranges.py"}, "Date": ""}, "1000": {"No": "1000", "Name": "Minimum Cost to Merge Stones", "Link": "https://leetcode.com/problems/minimum-cost-to-merge-stones/description", "Level": "Hard", "Tags": ["Array", "Dynamic Programming", "Prefix Sum"], "Solutions": {"Java": "1000-minimum-cost-to-merge-stones.java", "Python": "1000-minimum-cost-to-merge-stones.py"}, "Date": ""}, "1028": {"No": "1028", "Name": "Recover a Tree From Preorder Traversal", "Link": "https://leetcode.com/problems/recover-a-tree-from-preorder-traversal/description", "Level": "Hard", "Tags": ["String", "Tree", "Depth-First Search", "Binary Tree"], "Solutions": {"Python": "1028-recover-a-tree-from-preorder-traversal.py"}, "Date": ""}, "1029": {"No": "1029", "Name": "Two City Scheduling", "Link": "https://leetcode.com/problems/two-city-scheduling/description", "Level": "Medium", "Tags": ["Array", "Greedy", "Sorting"], "Solutions": {"Python": "1029-remove-all-adjacent-duplicates-in-string-ii.py"}, "Date": ""}, "1076": {"No": "1076", "Name": "Project Employees II", "Link": "https://leetcode.com/problems/project-employees-ii/description", "Level": "Easy", "Tags": ["Database"], "Solutions": {"Python": "1076-number-of-submatrices-that-sum-to-target-hashmap-prefix.py"}, "Date": ""}, "1094": {"No": "1094", "Name": "Car Pooling", "Link": "https://leetcode.com/problems/car-pooling/description", "Level": "Medium", "Tags": ["Array", "Sorting", "Heap (Priority Queue)", "Simulation", "Prefix Sum"], "Solutions": {"Java": "1094-car-pooling.java"}, "Date": ""}, "1105": {"No": "1105", "Name": "Filling Bookcase Shelves", "Link": "https://leetcode.com/problems/filling-bookcase-shelves/description", "Level": "Medium", "Tags": ["Array", "Dynamic Programming"], "Solutions": {"Python": "1105.py"}, "Date": ""}, "1110": {"No": "1110", "Name": "Delete Nodes And Return Forest", "Link": "https://leetcode.com/problems/delete-nodes-and-return-forest/description", "Level": "Medium", "Tags": ["Array", "Hash Table", "Tree", "Depth-First Search", "Binary Tree"], "Solutions": {"Java": "1110-delete-nodes-and-return-forest.java"}, "Date": ""}, "1123": {"No": "1123", "Name": "Lowest Common Ancestor of Deepest Leaves", "Link": "https://leetcode.com/problems/lowest-common-ancestor-of-deepest-leaves/description", "Level": "Medium", "Tags": ["Hash Table", "Tree", "Depth-First Search", "Breadth-First Search", "Binary Tree"], "Solutions": {"Python": "1123-lowest-common-ancestor-of-deepest-leaves.py"}, "Date": ""}, "1129": {"No": "1129", "Name": "Shortest Path with Alternating Colors", "Link": "https://leetcode.com/problems/shortest-path-with-alternating-colors/description", "Level": "Medium", "Tags": ["Breadth-First Search", "Graph"], "Solutions": {"Java": "1129-shortest-path-with-alternating-colors.java"}, "Date": ""}, "1143": {"No": "1143", "Name": "Longest Common Subsequence", "Link": "https://leetcode.com/problems/longest-common-subsequence/description", "Level": "Medium", "Tags": ["String", "Dynamic Programming"], "Solutions": {"Java": "1143-longest-common-subsequenc-2dDP.java"}, "Date": ""}, "1146": {"No": "1146", "Name": "Snapshot Array", "Link": "https://leetcode.com/problems/snapshot-array/description", "Level": "Medium", "Tags": ["Array", "Hash Table", "Binary Search", "Design"], "Solutions": {"Java": "1146-snapshot-array-treemap.java"}, "Date": ""}, "1153": {"No": "1153", "Name": "String Transforms Into Another String", "Link": "https://leetcode.com/problems/string-transforms-into-another-string/description", "Level": "Hard", "Tags": ["Hash Table", "String"], "Solutions": {"Java": "1153-string-transforms-into-another-string.java"}, "Date": ""}, "1195": {"No": "1195", "Name": "Fizz Buzz Multithreaded", "Link": "https://leetcode.com/problems/fizz-buzz-multithreaded/description", "Level": "Medium", "Tags": ["Concurrency"], "Solutions": {"Java": "1195-fizz-buzz-multithreaded.java"}, "Date": ""}, "1218": {"No": "1218", "Name": "Longest Arithmetic Subsequence of Given Difference", "Link": "https://leetcode.com/problems/longest-arithmetic-subsequence-of-given-difference/description", "Level": "Medium", "Tags": ["Array", "Hash Table", "Dynamic Programming"], "Solutions": {"Python": "1218-longest-arithmetic-subsequence-of-given-difference.py"}, "Date": ""}, "1255": {"No": "1255", "Name": "Maximum Score Words Formed by Letters", "Link": "https://leetcode.com/problems/maximum-score-words-formed-by-letters/description", "Level": "Hard", "Tags": ["Array", "String", "Dynamic Programming", "Backtracking", "Bit Manipulation", "Bitmask"], "Solutions": {"Python": "1255-maximum-score-words-formed-by-letters.py"}, "Date": ""}, "1268": {"No": "1268", "Name": "Search Suggestions System", "Link": "https://leetcode.com/problems/search-suggestions-system/description", "Level": "Medium", "Tags": ["Array", "String", "Binary Search", "Trie", "Sorting", "Heap (Priority Queue)"], "Solutions": {"Python": "1268-search-suggestions-system.py"}, "Date": ""}, "1284": {"No": "1284", "Name": "Minimum Number of Flips to Convert Binary Matrix to Zero Matrix", "Link": "https://leetcode.com/problems/minimum-number-of-flips-to-convert-binary-matrix-to-zero-matrix/description", "Level": "Hard", "Tags": ["Array", "Hash Table", "Bit Manipulation", "Breadth-First Search", "Matrix"], "Solutions": {"Python": "1284-minimum-number-of-flips-to-convert-binary-matrix-to-zero-matrix.py"}, "Date": ""}, "1293": {"No": "1293", "Name": "Shortest Path in a Grid with Obstacles Elimination", "Link": "https://leetcode.com/problems/shortest-path-in-a-grid-with-obstacles-elimination/description", "Level": "Hard", "Tags": ["Array", "Breadth-First Search", "Matrix"], "Solutions": {"Python": "1293-shortest-path-in-a-grid-with-obstacles-elimination.py"}, "Date": ""}, "1299": {"No": "1299", "Name": "Replace Elements with Greatest Element on Right Side", "Link": "https://leetcode.com/problems/replace-elements-with-greatest-element-on-right-side/description", "Level": "Easy", "Tags": ["Array"], "Solutions": {"Python": "1299-replace-elements-with-greatest-element-on-right-side.py"}, "Date": ""}, "1306": {"No": "1306", "Name": "Jump Game III", "Link": "https://leetcode.com/problems/jump-game-iii/description", "Level": "Medium", "Tags": ["Array", "Depth-First Search", "Breadth-First Search"], "Solutions": {"C++": "1306-jump-game-iii.cpp"}, "Date": ""}, "1310": {"No": "1310", "Name": "XOR Queries of a Subarray", "Link": "https://leetcode.com/problems/xor-queries-of-a-subarray/description", "Level": "Medium", "Tags": ["Array", "Bit Manipulation", "Prefix Sum"], "Solutions": {"Python": "1310.py", "C++": "1310-xor-queries-of-a-subarray.cpp"}, "Date": ""}, "1312": {"No": "1312", "Name": "Minimum Insertion Steps to Make a String Palindrome", "Link": "https://leetcode.com/problems/minimum-insertion-steps-to-make-a-string-palindrome/description", "Level": "Hard", "Tags": ["String", "Dynamic Programming"], "Solutions": {"Python": "1312-minimum-insertion-steps-to-make-a-string-palindrome-dp.py"}, "Date": ""}, "1345": {"No": "1345", "Name": "Jump Game IV", "Link": "https://leetcode.com/problems/jump-game-iv/description", "Level": "Hard", "Tags": ["Array", "Hash Table", "Breadth-First Search"], "Solutions": {"C++": "1345-jump-game-iv.cpp"}, "Date": ""}, "1371": {"No": "1371", "Name": "Find the Longest Substring Containing Vowels in Even Counts", "Link": "https://leetcode.com/problems/find-the-longest-substring-containing-vowels-in-even-counts/description", "Level": "Medium", "Tags": ["Hash Table", "String", "Bit Manipulation", "Prefix Sum"], "Solutions": {"Python": "1371-find-the-longest-substring-containing-vowels-in-even-counts.py", "C++": "1371-find-the-longest-substring-containing-vowels-in-even-counts.cpp"}, "Date": ""}, "1402": {"No": "1402", "Name": "Reducing Dishes", "Link": "https://leetcode.com/problems/reducing-dishes/description", "Level": "Hard", "Tags": ["Array", "Dynamic Programming", "Greedy", "Sorting"], "Solutions": {"Python": "1402-reducing-dishes-greedy.py"}, "Date": ""}, "1422": {"No": "1422", "Name": "Maximum Score After Splitting a String", "Link": "https://leetcode.com/problems/maximum-score-after-splitting-a-string/description", "Level": "Easy", "Tags": ["String", "Prefix Sum"], "Solutions": {"Java": "1422-maximum-score-after-splitting-a-string.java"}, "Date": ""}, "1425": {"No": "1425", "Name": "Constrained Subsequence Sum", "Link": "https://leetcode.com/problems/constrained-subsequence-sum/description", "Level": "Hard", "Tags": ["Array", "Dynamic Programming", "Queue", "Sliding Window", "Heap (Priority Queue)", "Monotonic Queue"], "Solutions": {"C++": "1425-constrained-subsequence-sum.cpp"}, "Date": ""}, "1438": {"No": "1438", "Name": "Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit", "Link": "https://leetcode.com/problems/longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit/description", "Level": "Medium", "Tags": ["Array", "Queue", "Sliding Window", "Heap (Priority Queue)", "Ordered Set", "Monotonic Queue"], "Solutions": {"Java": "1438-longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit.java"}, "Date": ""}, "1442": {"No": "1442", "Name": "Count Triplets That Can Form Two Arrays of Equal XOR", "Link": "https://leetcode.com/problems/count-triplets-that-can-form-two-arrays-of-equal-xor/description", "Level": "Medium", "Tags": ["Array", "Hash Table", "Math", "Bit Manipulation", "Prefix Sum"], "Solutions": {"Java": "1442-count-triplets-that-can-form-two-arrays-of-equal-xor.java"}, "Date": ""}, "1461": {"No": "1461", "Name": "Check If a String Contains All Binary Codes of Size K", "Link": "https://leetcode.com/problems/check-if-a-string-contains-all-binary-codes-of-size-k/description", "Level": "Medium", "Tags": ["Hash Table", "String", "Bit Manipulation", "Rolling Hash", "Hash Function"], "Solutions": {"Python": "1461-check-if-a-string-contains-all-binary-codes-of-size-k.py"}, "Date": ""}, "1463": {"No": "1463", "Name": "Cherry Pickup II", "Link": "https://leetcode.com/problems/cherry-pickup-ii/description", "Level": "Hard", "Tags": ["Array", "Dynamic Programming", "Matrix"], "Solutions": {"Python": "1463-cherry-pickup-ii.py"}, "Date": ""}, "1477": {"No": "1477", "Name": "Find Two Non-overlapping Sub-arrays Each With Target Sum", "Link": "https://leetcode.com/problems/find-two-non-overlapping-sub-arrays-each-with-target-sum/description", "Level": "Medium", "Tags": ["Array", "Hash Table", "Binary Search", "Dynamic Programming", "Sliding Window"], "Solutions": {"Java": "1477-find-two-non-overlapping-sub-arrays-each-with-target-sum-out-of-memory.java"}, "Date": ""}, "1483": {"No": "1483", "Name": "Kth Ancestor of a Tree Node", "Link": "https://leetcode.com/problems/kth-ancestor-of-a-tree-node/description", "Level": "Hard", "Tags": ["Binary Search", "Dynamic Programming", "Tree", "Depth-First Search", "Breadth-First Search", "Design"], "Solutions": {"Java": "1483-kth-ancestor-of-tree-node-brutalforce.java"}, "Date": ""}, "1493": {"No": "1493", "Name": "Longest Subarray of 1's After Deleting One Element", "Link": "https://leetcode.com/problems/longest-subarray-of-1s-after-deleting-one-element/description", "Level": "Medium", "Tags": ["Array", "Dynamic Programming", "Sliding Window"], "Solutions": {"Java": "1493-maximum-score-of-a-good-subarray-wrong.java"}, "Date": ""}, "1498": {"No": "1498", "Name": "Number of Subsequences That Satisfy the Given Sum Condition", "Link": "https://leetcode.com/problems/number-of-subsequences-that-satisfy-the-given-sum-condition/description", "Level": "Medium", "Tags": ["Array", "Two Pointers", "Binary Search", "Sorting"], "Solutions": {"Python": "1498-number-of-subsequences-that-satisfy-the-given-sum-condition.py"}, "Date": ""}, "1499": {"No": "1499", "Name": "Max Value of Equation", "Link": "https://leetcode.com/problems/max-value-of-equation/description", "Level": "Hard", "Tags": ["Array", "Queue", "Sliding Window", "Heap (Priority Queue)", "Monotonic Queue"], "Solutions": {"Python": "1499-max-value-of-equation.py"}, "Date": ""}, "1522": {"No": "1522", "Name": "Diameter of N-Ary Tree", "Link": "https://leetcode.com/problems/diameter-of-n-ary-tree/description", "Level": "Medium", "Tags": ["Tree", "Depth-First Search"], "Solutions": {"Java": "1522-diameter-of-n-ary-tree.java"}, "Date": ""}, "1524": {"No": "1524", "Name": "Number of Sub-arrays With Odd Sum", "Link": "https://leetcode.com/problems/number-of-sub-arrays-with-odd-sum/description", "Level": "Medium", "Tags": ["Array", "Math", "Dynamic Programming", "Prefix Sum"], "Solutions": {"Java": "1524-number-of-sub-arrays-with-odd-sum.java"}, "Date": ""}, "1525": {"No": "1525", "Name": "Number of Good Ways to Split a String", "Link": "https://leetcode.com/problems/number-of-good-ways-to-split-a-string/description", "Level": "Medium", "Tags": ["Hash Table", "String", "Dynamic Programming", "Bit Manipulation"], "Solutions": {"Python": "1525-number-of-good-ways-to-split-a-string.py"}, "Date": ""}, "1548": {"No": "1548", "Name": "The Most Similar Path in a Graph", "Link": "https://leetcode.com/problems/the-most-similar-path-in-a-graph/description", "Level": "Hard", "Tags": ["Dynamic Programming", "Graph"], "Solutions": {"Java": "1548-the-most-similar-path-in-a-graph-dp.java"}, "Date": ""}, "1584": {"No": "1584", "Name": "Min Cost to Connect All Points", "Link": "https://leetcode.com/problems/min-cost-to-connect-all-points/description", "Level": "Medium", "Tags": ["Array", "Union Find", "Graph", "Minimum Spanning Tree"], "Solutions": {"Java": "1584-min-cost-to-connect-all-points-prim.java", "Python": "1584-min-cost-to-connect-all-points.py"}, "Date": ""}, "1590": {"No": "1590", "Name": "Make Sum Divisible by P", "Link": "https://leetcode.com/problems/make-sum-divisible-by-p/description", "Level": "Medium", "Tags": ["Array", "Hash Table", "Prefix Sum"], "Solutions": {"Java": "1590-make-sum-divisible-by-p.java"}, "Date": ""}, "1631": {"No": "1631", "Name": "Path With Minimum Effort", "Link": "https://leetcode.com/problems/path-with-minimum-effort/description", "Level": "Medium", "Tags": ["Array", "Binary Search", "Depth-First Search", "Breadth-First Search", "Union Find", "Heap (Priority Queue)", "Matrix"], "Solutions": {"Java": "1631-path-with-minimum-effort.java"}, "Date": ""}, "1632": {"No": "1632", "Name": "Rank Transform of a Matrix", "Link": "https://leetcode.com/problems/rank-transform-of-a-matrix/description", "Level": "Hard", "Tags": ["Array", "Union Find", "Graph", "Topological Sort", "Sorting", "Matrix"], "Solutions": {"Java": "1632-rank-transform-of-a-matrix.java"}, "Date": ""}, "1641": {"No": "1641", "Name": "Count Sorted Vowel Strings", "Link": "https://leetcode.com/problems/count-sorted-vowel-strings/description", "Level": "Medium", "Tags": ["Math", "Dynamic Programming", "Combinatorics"], "Solutions": {"Python": "1641-count-sorted-vowel-strings.py"}, "Date": ""}, "1654": {"No": "1654", "Name": "Minimum Jumps to Reach Home", "Link": "https://leetcode.com/problems/minimum-jumps-to-reach-home/description", "Level": "Medium", "Tags": ["Array", "Dynamic Programming", "Breadth-First Search"], "Solutions": {"Java": "1654-minimum-jumps-to-reach-home.java", "Python": "1654-minimum-jumps-to-reach-home-dp.py"}, "Date": ""}, "1674": {"No": "1674", "Name": "Minimum Moves to Make Array Complementary", "Link": "https://leetcode.com/problems/minimum-moves-to-make-array-complementary/description", "Level": "Medium", "Tags": ["Array", "Hash Table", "Prefix Sum"], "Solutions": {"Python": "1674-minimum-moves-to-make-array-complementary.py", "C++": "1674-minimum-moves-to-make-array-complementary.cpp"}, "Date": ""}, "1676": {"No": "1676", "Name": "Lowest Common Ancestor of a Binary Tree IV", "Link": "https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree-iv/description", "Level": "Medium", "Tags": ["Hash Table", "Tree", "Depth-First Search", "Binary Tree"], "Solutions": {"Python": "1676-lowest-common-ancestor-of-a-binary-tree-iv.py"}, "Date": ""}, "1740": {"No": "1740", "Name": "Find Distance in a Binary Tree", "Link": "https://leetcode.com/problems/find-distance-in-a-binary-tree/description", "Level": "Medium", "Tags": ["Hash Table", "Tree", "Depth-First Search", "Breadth-First Search", "Binary Tree"], "Solutions": {"Python": "1740-find-distance-in-a-binary-tree.py"}, "Date": ""}, "1774": {"No": "1774", "Name": "Closest Dessert Cost", "Link": "https://leetcode.com/problems/closest-dessert-cost/description", "Level": "Medium", "Tags": ["Array", "Dynamic Programming", "Backtracking"], "Solutions": {"Java": "1774-closest-dessert-cost.java"}, "Date": ""}, "1776": {"No": "1776", "Name": "Car Fleet II", "Link": "https://leetcode.com/problems/car-fleet-ii/description", "Level": "Hard", "Tags": ["Array", "Math", "Stack", "Heap (Priority Queue)", "Monotonic Stack"], "Solutions": {"Java": "1776-car-fleet-II.java"}, "Date": ""}, "1782": {"No": "1782", "Name": "Count Pairs Of Nodes", "Link": "https://leetcode.com/problems/count-pairs-of-nodes/description", "Level": "Hard", "Tags": ["Array", "Two Pointers", "Binary Search", "Graph", "Sorting"], "Solutions": {"Java": "1782-count-pairs-of-nodes.java"}, "Date": ""}, "1786": {"No": "1786", "Name": "Number of Restricted Paths From First to Last Node", "Link": "https://leetcode.com/problems/number-of-restricted-paths-from-first-to-last-node/description", "Level": "Medium", "Tags": ["Dynamic Programming", "Graph", "Topological Sort", "Heap (Priority Queue)", "Shortest Path"], "Solutions": {"Java": "1786-number-of-restricted-paths-from-first-to-last-node.java"}, "Date": ""}, "1825": {"No": "1825", "Name": "Finding MK Average", "Link": "https://leetcode.com/problems/finding-mk-average/description", "Level": "Hard", "Tags": ["Design", "Queue", "Heap (Priority Queue)", "Data Stream", "Ordered Set"], "Solutions": {"Java": "1825-finding-mk-average.java"}, "Date": ""}, "1834": {"No": "1834", "Name": "Single-Threaded CPU", "Link": "https://leetcode.com/problems/single-threaded-cpu/description", "Level": "Medium", "Tags": ["Array", "Sorting", "Heap (Priority Queue)"], "Solutions": {"Java": "1834-single-threaded-cpu.java"}, "Date": ""}, "1838": {"No": "1838", "Name": "Frequency of the Most Frequent Element", "Link": "https://leetcode.com/problems/frequency-of-the-most-frequent-element/description", "Level": "Medium", "Tags": ["Array", "Binary Search", "Greedy", "Sliding Window", "Sorting", "Prefix Sum"], "Solutions": {"Python": "1838-frequency-of-the-most-frequent-element.py"}, "Date": ""}, "1851": {"No": "1851", "Name": "Minimum Interval to Include Each Query", "Link": "https://leetcode.com/problems/minimum-interval-to-include-each-query/description", "Level": "Hard", "Tags": ["Array", "Binary Search", "Line Sweep", "Sorting", "Heap (Priority Queue)"], "Solutions": {"Java": "1851-minimum-interval-to-include-each-query.java"}, "Date": ""}, "1888": {"No": "1888", "Name": "Minimum Number of Flips to Make the Binary String Alternating", "Link": "https://leetcode.com/problems/minimum-number-of-flips-to-make-the-binary-string-alternating/description", "Level": "Medium", "Tags": ["String", "Dynamic Programming", "Greedy", "Sliding Window"], "Solutions": {"Java": "1888-minimum-number-of-flips-to-make-the-binary-string-alternating.java", "Python": "1888-minimum-number-of-flips-to-make-the-binary-string-alternating.py"}, "Date": ""}, "1898": {"No": "1898", "Name": "Maximum Number of Removable Characters", "Link": "https://leetcode.com/problems/maximum-number-of-removable-characters/description", "Level": "Medium", "Tags": ["Array", "Two Pointers", "String", "Binary Search"], "Solutions": {"Python": "1898-maximum-number-of-removable-characters.py"}, "Date": ""}, "1923": {"No": "1923", "Name": "Longest Common Subpath", "Link": "https://leetcode.com/problems/longest-common-subpath/description", "Level": "Hard", "Tags": ["Array", "Binary Search", "Rolling Hash", "Suffix Array", "Hash Function"], "Solutions": {"Python": "1923-longest-common-subpath-rolling-hash-map.py"}, "Date": ""}, "1930": {"No": "1930", "Name": "Unique Length-3 Palindromic Subsequences", "Link": "https://leetcode.com/problems/unique-length-3-palindromic-subsequences/description", "Level": "Medium", "Tags": ["Hash Table", "String", "Bit Manipulation", "Prefix Sum"], "Solutions": {"Python": "1930-unique-length-3-palindromic-subsequences.py"}, "Date": ""}, "1937": {"No": "1937", "Name": "Maximum Number of Points with Cost", "Link": "https://leetcode.com/problems/maximum-number-of-points-with-cost/description", "Level": "Medium", "Tags": ["Array", "Dynamic Programming", "Matrix"], "Solutions": {"Java": "1937-maximum-number-of-points-with-cost.java"}, "Date": ""}, "1944": {"No": "1944", "Name": "Number of Visible People in a Queue", "Link": "https://leetcode.com/problems/number-of-visible-people-in-a-queue/description", "Level": "Hard", "Tags": ["Array", "Stack", "Monotonic Stack"], "Solutions": {"Python": "1944-number-of-visible-people-in-a-queue.py"}, "Date": ""}, "1963": {"No": "1963", "Name": "Minimum Number of Swaps to Make the String Balanced", "Link": "https://leetcode.com/problems/minimum-number-of-swaps-to-make-the-string-balanced/description", "Level": "Medium", "Tags": ["Two Pointers", "String", "Stack", "Greedy"], "Solutions": {"Python": "1963-minimum-number-of-swaps-to-make-the-string-balanced.py"}, "Date": ""}, "1967": {"No": "1967", "Name": "Number of Strings That Appear as Substrings in Word", "Link": "https://leetcode.com/problems/number-of-strings-that-appear-as-substrings-in-word/description", "Level": "Easy", "Tags": ["Array", "String"], "Solutions": {"Python": "1967-array-with-elements-not-equal-to-average-of-neighbors.py"}, "Date": ""}, "1981": {"No": "1981", "Name": "Minimize the Difference Between Target and Chosen Elements", "Link": "https://leetcode.com/problems/minimize-the-difference-between-target-and-chosen-elements/description", "Level": "Medium", "Tags": ["Array", "Dynamic Programming", "Matrix"], "Solutions": {"Java": "1981-minimize-the-difference-between-target-and-chosen-elements.java"}, "Date": ""}, "1993": {"No": "1993", "Name": "Operations on Tree", "Link": "https://leetcode.com/problems/operations-on-tree/description", "Level": "Medium", "Tags": ["Array", "Hash Table", "Tree", "Depth-First Search", "Breadth-First Search", "Design"], "Solutions": {"Python": "1993-operations-on-tree.py"}, "Date": ""}, "1996": {"No": "1996", "Name": "The Number of Weak Characters in the Game", "Link": "https://leetcode.com/problems/the-number-of-weak-characters-in-the-game/description", "Level": "Medium", "Tags": ["Array", "Stack", "Greedy", "Sorting", "Monotonic Stack"], "Solutions": {"Java": "1996-the-number-of-weak-characters-in-the-game.java"}, "Date": ""}, "2001": {"No": "2001", "Name": "Number of Pairs of Interchangeable Rectangles", "Link": "https://leetcode.com/problems/number-of-pairs-of-interchangeable-rectangles/description", "Level": "Medium", "Tags": ["Array", "Hash Table", "Math", "Counting", "Number Theory"], "Solutions": {"Python": "2001-number-of-pairs-of-interchangeable-rectangles.py"}, "Date": ""}, "2002": {"No": "2002", "Name": "Maximum Product of the Length of Two Palindromic Subsequences", "Link": "https://leetcode.com/problems/maximum-product-of-the-length-of-two-palindromic-subsequences/description", "Level": "Medium", "Tags": ["String", "Dynamic Programming", "Backtracking", "Bit Manipulation", "Bitmask"], "Solutions": {"Python": "2002-maximum-product-of-the-length-of-two-palindromic-subsequences.py"}, "Date": ""}, "2017": {"No": "2017", "Name": "Grid Game", "Link": "https://leetcode.com/problems/grid-game/description", "Level": "Medium", "Tags": ["Array", "Matrix", "Prefix Sum"], "Solutions": {"Python": "2017-grid-game.py"}, "Date": ""}, "2034": {"No": "2034", "Name": "Stock Price Fluctuation ", "Link": "https://leetcode.com/problems/stock-price-fluctuation/description", "Level": "Medium", "Tags": ["Hash Table", "Design", "Heap (Priority Queue)", "Data Stream", "Ordered Set"], "Solutions": {"Java": "2034-stock-price-fluctuation.java"}, "Date": ""}, "2049": {"No": "2049", "Name": "Count Nodes With the Highest Score", "Link": "https://leetcode.com/problems/count-nodes-with-the-highest-score/description", "Level": "Medium", "Tags": ["Array", "Tree", "Depth-First Search", "Binary Tree"], "Solutions": {"Java": "2049-count-nodes-with-the-highest-score.java"}, "Date": ""}, "2050": {"No": "2050", "Name": "Parallel Courses III", "Link": "https://leetcode.com/problems/parallel-courses-iii/description", "Level": "Hard", "Tags": ["Array", "Dynamic Programming", "Graph", "Topological Sort"], "Solutions": {"Python": "2050-parallel-courses-iii.py"}, "Date": ""}, "2092": {"No": "2092", "Name": "Find All People With Secret", "Link": "https://leetcode.com/problems/find-all-people-with-secret/description", "Level": "Hard", "Tags": ["Depth-First Search", "Breadth-First Search", "Union Find", "Graph", "Sorting"], "Solutions": {"Python": "2092-find-all-people-with-secret.py"}, "Date": ""}, "2096": {"No": "2096", "Name": "Step-By-Step Directions From a Binary Tree Node to Another", "Link": "https://leetcode.com/problems/step-by-step-directions-from-a-binary-tree-node-to-another/description", "Level": "Medium", "Tags": ["String", "Tree", "Depth-First Search", "Binary Tree"], "Solutions": {"Java": "2096-step-by-step-directions-from-binary-tree-node-string.java", "Python": "2096-step-by-step-directions-from-a-binary-tree-node-to-another.py"}, "Date": ""}, "2101": {"No": "2101", "Name": "Detonate the Maximum Bombs", "Link": "https://leetcode.com/problems/detonate-the-maximum-bombs/description", "Level": "Medium", "Tags": ["Array", "Math", "Depth-First Search", "Breadth-First Search", "Graph", "Geometry"], "Solutions": {"Python": "2101-detonate-the-maximum-bombs.py"}, "Date": ""}, "2102": {"No": "2102", "Name": "Sequentially Ordinal Rank Tracker", "Link": "https://leetcode.com/problems/sequentially-ordinal-rank-tracker/description", "Level": "Hard", "Tags": ["Design", "Heap (Priority Queue)", "Data Stream", "Ordered Set"], "Solutions": {"Java": "2102-sequentially-ordinal-rank-tracker-hashset.java"}, "Date": ""}, "2104": {"No": "2104", "Name": "Sum of Subarray Ranges", "Link": "https://leetcode.com/problems/sum-of-subarray-ranges/description", "Level": "Medium", "Tags": ["Array", "Stack", "Monotonic Stack"], "Solutions": {"Java": "2104-sum-of-subarray-ranges.java"}, "Date": ""}, "2115": {"No": "2115", "Name": "Find All Possible Recipes from Given Supplies", "Link": "https://leetcode.com/problems/find-all-possible-recipes-from-given-supplies/description", "Level": "Medium", "Tags": ["Array", "Hash Table", "String", "Graph", "Topological Sort"], "Solutions": {"Java": "2115-find-all-possible-recipes-from-given-supplies.java"}, "Date": ""}, "2136": {"No": "2136", "Name": "Earliest Possible Day of Full Bloom", "Link": "https://leetcode.com/problems/earliest-possible-day-of-full-bloom/description", "Level": "Hard", "Tags": ["Array", "Greedy", "Sorting"], "Solutions": {"Python": "2136-earliest-possible-day-of-full-bloom.py"}, "Date": ""}, "2233": {"No": "2233", "Name": "Maximum Product After K Increments", "Link": "https://leetcode.com/problems/maximum-product-after-k-increments/description", "Level": "Medium", "Tags": ["Array", "Greedy", "Heap (Priority Queue)"], "Solutions": {"Java": "2233-maximum-product-after-k-increments-pq.java"}, "Date": ""}, "2234": {"No": "2234", "Name": "Maximum Total Beauty of the Gardens", "Link": "https://leetcode.com/problems/maximum-total-beauty-of-the-gardens/description", "Level": "Hard", "Tags": ["Array", "Two Pointers", "Binary Search", "Greedy", "Sorting"], "Solutions": {"Java": "2234-maximum-total-beauty-of-the-gardens.java"}, "Date": ""}, "2242": {"No": "2242", "Name": "Maximum Score of a Node Sequence", "Link": "https://leetcode.com/problems/maximum-score-of-a-node-sequence/description", "Level": "Hard", "Tags": ["Array", "Graph", "Sorting", "Enumeration"], "Solutions": {"Java": "2242-maximum-score-of-a-node-sequence-nodes.java"}, "Date": ""}, "2251": {"No": "2251", "Name": "Number of Flowers in Full Bloom", "Link": "https://leetcode.com/problems/number-of-flowers-in-full-bloom/description", "Level": "Hard", "Tags": ["Array", "Hash Table", "Binary Search", "Sorting", "Prefix Sum", "Ordered Set"], "Solutions": {"Java": "2251-number-of-flowers-in-full-bloom-prefix copy.java"}, "Date": ""}, "2271": {"No": "2271", "Name": "Maximum White Tiles Covered by a Carpet", "Link": "https://leetcode.com/problems/maximum-white-tiles-covered-by-a-carpet/description", "Level": "Medium", "Tags": ["Array", "Binary Search", "Greedy", "Sorting", "Prefix Sum"], "Solutions": {"Java": "2271-maximum-white-tiles-covered-by-a-carpet-slidng-window.java"}, "Date": ""}, "2272": {"No": "2272", "Name": "Substring With Largest Variance", "Link": "https://leetcode.com/problems/substring-with-largest-variance/description", "Level": "Hard", "Tags": ["Array", "Dynamic Programming"], "Solutions": {"Java": "2272-substring-with-largest-variance.java", "Python": "2272-substring-with-largest-variance.py"}, "Date": ""}, "2273": {"No": "2273", "Name": "Find Resultant Array After Removing Anagrams", "Link": "https://leetcode.com/problems/find-resultant-array-after-removing-anagrams/description", "Level": "Easy", "Tags": ["Array", "Hash Table", "String", "Sorting"], "Solutions": {"C++": "2273-find-resultant-array-after-removing-anagrams.cpp"}, "Date": ""}, "2276": {"No": "2276", "Name": "Count Integers in Intervals", "Link": "https://leetcode.com/problems/count-integers-in-intervals/description", "Level": "Hard", "Tags": ["Design", "Segment Tree", "Ordered Set"], "Solutions": {"Java": "2276-count-integers-in-intervals.java"}, "Date": ""}, "2280": {"No": "2280", "Name": "Minimum Lines to Represent a Line Chart", "Link": "https://leetcode.com/problems/minimum-lines-to-represent-a-line-chart/description", "Level": "Medium", "Tags": ["Array", "Math", "Geometry", "Sorting", "Number Theory"], "Solutions": {"Java": "2280-minimum-lines-to-represent-a-line-chart.java"}, "Date": ""}, "2289": {"No": "2289", "Name": "Steps to Make Array Non-decreasing", "Link": "https://leetcode.com/problems/steps-to-make-array-non-decreasing/description", "Level": "Medium", "Tags": ["Array", "Linked List", "Stack", "Monotonic Stack"], "Solutions": {"Python": "2289-steps-to-make-array-non-decreasing.py"}, "Date": ""}, "2290": {"No": "2290", "Name": "Minimum Obstacle Removal to Reach Corner", "Link": "https://leetcode.com/problems/minimum-obstacle-removal-to-reach-corner/description", "Level": "Hard", "Tags": ["Array", "Breadth-First Search", "Graph", "Heap (Priority Queue)", "Matrix", "Shortest Path"], "Solutions": {"Python": "2290-minimum-obstacle-removal-to-reach-corner.py"}, "Date": ""}, "2311": {"No": "2311", "Name": "Longest Binary Subsequence Less Than or Equal to K", "Link": "https://leetcode.com/problems/longest-binary-subsequence-less-than-or-equal-to-k/description", "Level": "Medium", "Tags": ["String", "Dynamic Programming", "Greedy", "Memoization"], "Solutions": {"Java": "2311-longest-binary-subsequence-less-than-or-equal-to-k.java"}, "Date": ""}, "2370": {"No": "2370", "Name": "Longest Ideal Subsequence", "Link": "https://leetcode.com/problems/longest-ideal-subsequence/description", "Level": "Medium", "Tags": ["Hash Table", "String", "Dynamic Programming"], "Solutions": {"Java": "2370-longest-ideal-subsequence.java"}, "Date": ""}, "2400": {"No": "2400", "Name": "Number of Ways to Reach a Position After Exactly k Steps", "Link": "https://leetcode.com/problems/number-of-ways-to-reach-a-position-after-exactly-k-steps/description", "Level": "Medium", "Tags": ["Math", "Dynamic Programming", "Combinatorics"], "Solutions": {"Java": "2400-number-of-ways-to-reach-a-position-after-exactly-k-steps.java"}, "Date": ""}, "2401": {"No": "2401", "Name": "Longest Nice Subarray", "Link": "https://leetcode.com/problems/longest-nice-subarray/description", "Level": "Medium", "Tags": ["Array", "Bit Manipulation", "Sliding Window"], "Solutions": {"Python": "2401-longest-nice-subarray.py"}, "Date": ""}, "2402": {"No": "2402", "Name": "Meeting Rooms III", "Link": "https://leetcode.com/problems/meeting-rooms-iii/description", "Level": "Hard", "Tags": ["Array", "Hash Table", "Sorting", "Heap (Priority Queue)", "Simulation"], "Solutions": {"Java": "2402-meeting-rooms-iii.java"}, "Date": ""}, "2406": {"No": "2406", "Name": "Divide Intervals Into Minimum Number of Groups", "Link": "https://leetcode.com/problems/divide-intervals-into-minimum-number-of-groups/description", "Level": "Medium", "Tags": ["Array", "Two Pointers", "Greedy", "Sorting", "Heap (Priority Queue)", "Prefix Sum"], "Solutions": {"Java": "2406-divide-intervals-into-minimum-number-of-groups.java"}, "Date": ""}, "2421": {"No": "2421", "Name": "Number of Good Paths", "Link": "https://leetcode.com/problems/number-of-good-paths/description", "Level": "Hard", "Tags": ["Array", "Hash Table", "Tree", "Union Find", "Graph", "Sorting"], "Solutions": {"Python": "2421-number-of-good-paths.py"}, "Date": ""}, "2444": {"No": "2444", "Name": "Count Subarrays With Fixed Bounds", "Link": "https://leetcode.com/problems/count-subarrays-with-fixed-bounds/description", "Level": "Hard", "Tags": ["Array", "Queue", "Sliding Window", "Monotonic Queue"], "Solutions": {"Python": "2444-count-subarrays-with-fixed-bounds.py"}, "Date": ""}, "2449": {"No": "2449", "Name": "Minimum Number of Operations to Make Arrays Similar", "Link": "https://leetcode.com/problems/minimum-number-of-operations-to-make-arrays-similar/description", "Level": "Hard", "Tags": ["Array", "Greedy", "Sorting"], "Solutions": {"Python": "2449-minimum-number-of-operations-to-make-arrays-similar.py"}, "Date": ""}, "2461": {"No": "2461", "Name": "Maximum Sum of Distinct Subarrays With Length K", "Link": "https://leetcode.com/problems/maximum-sum-of-distinct-subarrays-with-length-k/description", "Level": "Medium", "Tags": ["Array", "Hash Table", "Sliding Window"], "Solutions": {"Python": "2461-maximum-sum-of-distinct-subarrays-with-length-k.py"}, "Date": ""}, "2478": {"No": "2478", "Name": "Number of Beautiful Partitions", "Link": "https://leetcode.com/problems/number-of-beautiful-partitions/description", "Level": "Hard", "Tags": ["String", "Dynamic Programming"], "Solutions": {"Java": "2478-number-of-beautiful-partitions.java"}, "Date": ""}, "2487": {"No": "2487", "Name": "Remove Nodes From Linked List", "Link": "https://leetcode.com/problems/remove-nodes-from-linked-list/description", "Level": "Medium", "Tags": ["Linked List", "Stack", "Recursion", "Monotonic Stack"], "Solutions": {"C++": "2487-remove-nodes-from-linked-list.cpp"}, "Date": ""}, "2509": {"No": "2509", "Name": "Cycle Length Queries in a Tree", "Link": "https://leetcode.com/problems/cycle-length-queries-in-a-tree/description", "Level": "Hard", "Tags": ["Array", "Tree", "Binary Tree"], "Solutions": {"Java": "2509-cycle-length-queries-in-a-tree.java"}, "Date": ""}, "2516": {"No": "2516", "Name": "Take K of Each Character From Left and Right", "Link": "https://leetcode.com/problems/take-k-of-each-character-from-left-and-right/description", "Level": "Medium", "Tags": ["Hash Table", "String", "Sliding Window"], "Solutions": {"Python": "2516-take-k-of-each-character-from-left-and-right.py"}, "Date": ""}, "2538": {"No": "2538", "Name": "Difference Between Maximum and Minimum Price Sum", "Link": "https://leetcode.com/problems/difference-between-maximum-and-minimum-price-sum/description", "Level": "Hard", "Tags": ["Array", "Dynamic Programming", "Tree", "Depth-First Search"], "Solutions": {"Python": "2538-difference-between-maximum-and-minimum-price-sum.py"}, "Date": ""}, "2896": {"No": "2896", "Name": "Apply Operations to Make Two Strings Equal", "Link": "https://leetcode.com/problems/apply-operations-to-make-two-strings-equal/description", "Level": "Medium", "Tags": ["String", "Dynamic Programming"], "Solutions": {"Python": "2896-apply-operations-to-make-two-strings-equal.py"}, "Date": ""}, "2900": {"No": "2900", "Name": "Longest Unequal Adjacent Groups Subsequence I", "Link": "https://leetcode.com/problems/longest-unequal-adjacent-groups-subsequence-i/description", "Level": "Easy", "Tags": ["Array", "String", "Dynamic Programming", "Greedy"], "Solutions": {"Python": "2900.py"}, "Date": ""}, "2911": {"No": "2911", "Name": "Minimum Changes to Make K Semi-palindromes", "Link": "https://leetcode.com/problems/minimum-changes-to-make-k-semi-palindromes/description", "Level": "Hard", "Tags": ["Two Pointers", "String", "Dynamic Programming"], "Solutions": {"Python": "2911.py"}, "Date": ""}, "3000": {"No": "3000", "Name": "Maximum Area of Longest Diagonal Rectangle", "Link": "https://leetcode.com/problems/maximum-area-of-longest-diagonal-rectangle/description", "Level": "Easy", "Tags": ["Array"], "Solutions": {"Python": "3000.py"}, "Date": ""}, "3180": {"No": "3180", "Name": "Maximum Total Reward Using Operations I", "Link": "https://leetcode.com/problems/maximum-total-reward-using-operations-i/description", "Level": "Medium", "Tags": ["Array", "Dynamic Programming"], "Solutions": {"Python": "3180.py"}, "Date": ""}}