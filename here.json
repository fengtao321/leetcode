{
    "1": {
        "No": "1",
        "Name": "Two Sum",
        "Link": "1-two-sum",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "1-two-sum.py"
        }
    },
    "3": {
        "No": "3",
        "Name": "Longest Substring Without Repeating Characters",
        "Link": "3-longest-substring-without-repeating-characters",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "3-longest-substring-without-repeating-characters.py"
        }
    },
    "4": {
        "No": "4",
        "Name": "Median Of Two Sorted Arrays",
        "Link": "4-median-of-two-sorted-arrays",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "4-median-of-two-sorted-arrays.java",
            "Python": "4-median-of-two-sorted-arrays.py"
        }
    },
    "5": {
        "No": "5",
        "Name": "Longest Palindromic Substring",
        "Link": "5-longest-palindromic-substring",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "5-longest-palindromic-substring.java"
        }
    },
    "10": {
        "No": "10",
        "Name": "Regular Expression Matching",
        "Link": "10-regular-expression-matching",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "10-regular-expression-matching.py"
        }
    },
    "11": {
        "No": "11",
        "Name": "Container With Most Water",
        "Link": "11-container-with-most-water",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "11-container-with-most-water.java"
        }
    },
    "13": {
        "No": "13",
        "Name": "Roman To Integer",
        "Link": "13-roman-to-integer",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "13-roman-to-integer.java"
        }
    },
    "14": {
        "No": "14",
        "Name": "Longest Common Prefix",
        "Link": "14-longest-common-prefix",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "14-longest-common-prefix.py"
        }
    },
    "18": {
        "No": "18",
        "Name": "4sum",
        "Link": "18-4sum",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "18-4sum.py"
        }
    },
    "23": {
        "No": "23",
        "Name": "Merge K Sorted List Dequeue",
        "Link": "23-merge-k-sorted-list-dequeue",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "23-merge-k-sorted-list.java"
        }
    },
    "25": {
        "No": "25",
        "Name": "Reverse Nodes In K Group",
        "Link": "25-reverse-nodes-in-k-group",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "25-reverse-nodes-in-k-group.java"
        }
    },
    "28": {
        "No": "28",
        "Name": "Find The Index Of The First Occurrence In A String Kmp",
        "Link": "28-find-the-index-of-the-first-occurrence-in-a-string-kmp",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "28-find-the-index-of-the-first-occurrence-in-a-string.py"
        }
    },
    "31": {
        "No": "31",
        "Name": "Next Permutation",
        "Link": "31-next-permutation",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "31-next-permutation.java"
        }
    },
    "33": {
        "No": "33",
        "Name": "Search In Rotated Sorted Array",
        "Link": "33-search-in-rotated-sorted-array",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "33-search-in-rotated-sorted-array.py"
        }
    },
    "34": {
        "No": "34",
        "Name": "Find First And Last Position Of Element In Sorted Array",
        "Link": "34-find-first-and-last-position-of-element-in-sorted-array",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "34-find-first-and-last-position-of-element-in-sorted-array.py"
        }
    },
    "41": {
        "No": "41",
        "Name": "First Missing Positive",
        "Link": "41-first-missing-positive",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "41-first-missing-positive.java"
        }
    },
    "42": {
        "No": "42",
        "Name": "First Missing Positive",
        "Link": "42-first-missing-positive",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "42-first-missing-positive.py"
        }
    },
    "46": {
        "No": "46",
        "Name": "Permutations",
        "Link": "46-permutations",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "46-permutations.py"
        }
    },
    "52": {
        "No": "52",
        "Name": "N Queens Ii Bit Manipulate",
        "Link": "52-n-queens-ii-bit-manipulate",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "52-n-queens-ii-bit-manipulate.java",
            "Python": "52-n-queens-ii.py"
        }
    },
    "56": {
        "No": "56",
        "Name": "Merge Intervals Treemap",
        "Link": "56-merge-intervals-treemap",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "56-merge-intervals.java",
            "Python": "56-merge-intervals.py"
        }
    },
    "58": {
        "No": "58",
        "Name": "Length Of Last Word",
        "Link": "58-length-of-last-word",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "58-length-of-last-word.py"
        }
    },
    "60": {
        "No": "60",
        "Name": "Permutation Sequence",
        "Link": "60-permutation-sequence",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "60-permutation-sequence.java"
        }
    },
    "62": {
        "No": "62",
        "Name": "Unique Paths 2ddp",
        "Link": "62-unique-paths-2ddp",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "62-unique-paths-2ddp.java"
        }
    },
    "63": {
        "No": "63",
        "Name": "Unique Paths Ii",
        "Link": "63-unique-paths-ii",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "63-unique-paths-ii.java"
        }
    },
    "70": {
        "No": "70",
        "Name": "Climing Stairs",
        "Link": "70-climing-stairs",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "70-climing-stairs.java"
        }
    },
    "71": {
        "No": "71",
        "Name": "Simplify Path",
        "Link": "71-simplify-path",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "71-simplify-path.py"
        }
    },
    "72": {
        "No": "72",
        "Name": "Edit Distance",
        "Link": "72-edit-distance",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "72-edit-distance.py"
        }
    },
    "75": {
        "No": "75",
        "Name": "Sort Colors",
        "Link": "75-sort-colors",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "75-sort-colors.py"
        }
    },
    "76": {
        "No": "76",
        "Name": "Minimum Window Substring",
        "Link": "76-minimum-window-substring",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "76-minimum-window-substring.java",
            "Python": "76-minimum-window-substring.py"
        }
    },
    "84": {
        "No": "84",
        "Name": "Largest Rectangle In Histogram",
        "Link": "84-largest-rectangle-in-histogram",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "84-largest-rectangle-in-histogram.java"
        }
    },
    "91": {
        "No": "91",
        "Name": "Decode Ways Dp",
        "Link": "91-decode-ways-dp",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "91-decode-ways-dp.java"
        }
    },
    "97": {
        "No": "97",
        "Name": "Interleaving String",
        "Link": "97-interleaving-string",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "97-interleaving-string.java"
        }
    },
    "115": {
        "No": "115",
        "Name": "Distince Subsequences",
        "Link": "115-distince-subsequences",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "115-distince-subsequences.py"
        }
    },
    "116": {
        "No": "116",
        "Name": "Populating Next Right Pointers In Each Node",
        "Link": "116-populating-next-right-pointers-in-each-node",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "116-populating-next-right-pointers-in-each-node.py"
        }
    },
    "118": {
        "No": "118",
        "Name": "Pascals Triangle",
        "Link": "118-pascals-triangle",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "118-pascals-triangle.py"
        }
    },
    "122": {
        "No": "122",
        "Name": "Best Time To Buy And Sell Stock Ii",
        "Link": "122-best-time-to-buy-and-sell-stock-ii",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "122-best-time-to-buy-and-sell-stock-ii.py"
        }
    },
    "123": {
        "No": "123",
        "Name": "Best Time To Buy And Sell Stock Iii",
        "Link": "123-best-time-to-buy-and-sell-stock-iii",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "123-best-time-to-buy-and-sell-stock-iii.py"
        }
    },
    "124": {
        "No": "124",
        "Name": "Binary Tree Maximum Path Sum",
        "Link": "124-binary-tree-maximum-path-sum",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "124-binary-tree-maximum-path-sum.java"
        }
    },
    "126": {
        "No": "126",
        "Name": "TLE",
        "Link": "126-TLE",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "126.py"
        }
    },
    "127": {
        "No": "127",
        "Name": "Word Ladder",
        "Link": "127-word-ladder",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "127-word-ladder.java"
        }
    },
    "128": {
        "No": "128",
        "Name": "Longest Consecutive Sequence",
        "Link": "128-longest-consecutive-sequence",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "128-longest-consecutive-sequence.java",
            "Python": "128-longest-consecutive-sequence.py"
        }
    },
    "130": {
        "No": "130",
        "Name": "Surrounded Regions 0space",
        "Link": "130-surrounded-regions-0space",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "130-surrounded-regions-set.java"
        }
    },
    "133": {
        "No": "133",
        "Name": "Clone Graph",
        "Link": "133-clone-graph",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "133-clone-graph.java"
        }
    },
    "139": {
        "No": "139",
        "Name": "Word Break Dp",
        "Link": "139-word-break-dp",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "139-word-break.java"
        }
    },
    "150": {
        "No": "150",
        "Name": "Evaluate Reverse Polish Notation",
        "Link": "150-evaluate-reverse-polish-notation",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "150-evaluate-reverse-polish-notation.java"
        }
    },
    "152": {
        "No": "152",
        "Name": "Maximum Product Subarray Prefix",
        "Link": "152-maximum-product-subarray-prefix",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "152-maximum-product-subarray-prefix.java"
        }
    },
    "155": {
        "No": "155",
        "Name": "Min Stack",
        "Link": "155-min-stack",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "155-min-stack.java"
        }
    },
    "179": {
        "No": "179",
        "Name": "Largest Number",
        "Link": "179-largest-number",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "179-largest-number.py"
        }
    },
    "187": {
        "No": "187",
        "Name": "Repeated Dna Sequences",
        "Link": "187-repeated-dna-sequences",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "187-repeated-dna-sequences.py"
        }
    },
    "188": {
        "No": "188",
        "Name": "Best Time To Buy And Sell Stock Iv",
        "Link": "188-best-time-to-buy-and-sell-stock-iv",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "188-best-time-to-buy-and-sell-stock-iv.py"
        }
    },
    "189": {
        "No": "189",
        "Name": "Rotate Array",
        "Link": "189-rotate-array",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "189-rotate-array.py"
        }
    },
    "200": {
        "No": "200",
        "Name": "Number Of Islands Disjoint Set",
        "Link": "200-number-of-islands-disjoint-set",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "200-number-of-islands-fast-solution.java"
        }
    },
    "207": {
        "No": "207",
        "Name": "Course Schedule Bfs",
        "Link": "207-course-schedule-bfs",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "207-course-schedule-dfs.java"
        }
    },
    "209": {
        "No": "209",
        "Name": "Minimum Size Subarray Sum",
        "Link": "209-minimum-size-subarray-sum",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "209-minimum-size-subarray-sum.py"
        }
    },
    "210": {
        "No": "210",
        "Name": "Course Schedule II Topological Sorting",
        "Link": "210-course-schedule-II-topological-sorting",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "210-course-schedule-II.java",
            "Python": "210-course-schedule-ii.py"
        }
    },
    "211": {
        "No": "211",
        "Name": "Design Add And Search Words Data Structure",
        "Link": "211-design-add-and-search-words-data-structure",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "211-design-add-and-search-words-data-structure.py"
        }
    },
    "212": {
        "No": "212",
        "Name": "Word Search Ii",
        "Link": "212-word-search-ii",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "212-word-search-ii.java"
        }
    },
    "217": {
        "No": "217",
        "Name": "Contains Duplicate",
        "Link": "217-contains-duplicate",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "217-contains-duplicate.py"
        }
    },
    "218": {
        "No": "218",
        "Name": "The Skyline Problem Line Sweep",
        "Link": "218-the-skyline-problem-line-sweep",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "218-the-skyline-problem.java"
        }
    },
    "225": {
        "No": "225",
        "Name": "Implement Stack Using Queues",
        "Link": "225-implement-stack-using-queues",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "225-implement-stack-using-queues.py"
        }
    },
    "239": {
        "No": "239",
        "Name": "Sliding Window Maximum Monoqueue",
        "Link": "239-sliding-window-maximum-monoqueue",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "239-sliding-window-maximum-priorityqueue.java"
        }
    },
    "242": {
        "No": "242",
        "Name": "Valid Anagram Alph List",
        "Link": "242-valid-anagram-alph-list",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "242-valid-anagram-dictionary.py"
        }
    },
    "256": {
        "No": "256",
        "Name": "Walls And Gates Fast Solution",
        "Link": "256-walls-and-gates-fast-solution",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "256-walls-and-gates.java"
        }
    },
    "261": {
        "No": "261",
        "Name": "Graph Valid Tree",
        "Link": "261-graph-valid-tree",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "261-graph-valid-tree.java",
            "Python": "261-graph-valid-tree.py"
        }
    },
    "268": {
        "No": "268",
        "Name": "Missing Number",
        "Link": "268-missing-number",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "268-missing-number.java"
        }
    },
    "269": {
        "No": "269",
        "Name": "Alien Dictionary",
        "Link": "269-alien-dictionary",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "269-alien-dictionary.py"
        }
    },
    "280": {
        "No": "280",
        "Name": "Wiggle Sort",
        "Link": "280-wiggle-sort",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "280-wiggle-sort.py"
        }
    },
    "287": {
        "No": "287",
        "Name": "Find The Duplicate Number",
        "Link": "287-find-the-duplicate-number",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "287-find-the-duplicate-number.java"
        }
    },
    "300": {
        "No": "300",
        "Name": "Longest Increasing Subsequence",
        "Link": "300-longest-increasing-subsequence",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "300-longest-increasing-subsequence.java"
        }
    },
    "301": {
        "No": "301",
        "Name": "Remove Invalid Parentheses",
        "Link": "301-remove-invalid-parentheses",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "301-remove-invalid-parentheses.py"
        }
    },
    "304": {
        "No": "304",
        "Name": "Range Sum Query 2d Immutable",
        "Link": "304-range-sum-query-2d-immutable",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "304-range-sum-query-2d-immutable.py"
        }
    },
    "307": {
        "No": "307",
        "Name": "Range Sum Query Mutable",
        "Link": "307-range-sum-query-mutable",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "307-range-sum-query-mutable.java"
        }
    },
    "309": {
        "No": "309",
        "Name": "Best Time To Buy And Sell Stock With Cooldown 2ddp",
        "Link": "309-best-time-to-buy-and-sell-stock-with-cooldown-2ddp",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "309-best-time-to-buy-and-sell-stock-with-cooldown-stupid.java"
        }
    },
    "310": {
        "No": "310",
        "Name": "Minimum Height Trees",
        "Link": "310-minimum-height-trees",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "310-minimum-height-trees.java"
        }
    },
    "312": {
        "No": "312",
        "Name": "Burst Balloons Dictionary Dp",
        "Link": "312-burst-balloons-dictionary-dp",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "312-burst-balloons-dictionary-lrucache.py"
        }
    },
    "322": {
        "No": "322",
        "Name": "Coin Change",
        "Link": "322-coin-change",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "322-coin-change.java"
        }
    },
    "323": {
        "No": "323",
        "Name": "Number Of Connected Components In An Undirected Graph Do Again",
        "Link": "323-number-of-connected-components-in-an-undirected-graph-do-again",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "323-number-of-connected-components-in-an-undirected-graph-unit-find.java"
        }
    },
    "329": {
        "No": "329",
        "Name": "Longest Increasing Path In A Matrix",
        "Link": "329-longest-increasing-path-in-a-matrix",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "329-longest-increasing-path-in-a-matrix.java",
            "Python": "329-longest-increasing-path-in-a-matrix.py"
        }
    },
    "332": {
        "No": "332",
        "Name": "Reconstruct Itinerary",
        "Link": "332-reconstruct-itinerary",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "332-reconstruct-itinerary.py"
        }
    },
    "355": {
        "No": "355",
        "Name": "Design Twitter",
        "Link": "355-design-twitter",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "355-design-twitter.java"
        }
    },
    "380": {
        "No": "380",
        "Name": "Insert Delete Getrandom O1",
        "Link": "380-insert-delete-getrandom-o1",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "380-insert-delete-getrandom-o1.py"
        }
    },
    "392": {
        "No": "392",
        "Name": "Is Subsequence",
        "Link": "392-is-subsequence",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "392-is-subsequence.py"
        }
    },
    "394": {
        "No": "394",
        "Name": "Decode String",
        "Link": "394-decode-string",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "394-decode-string.py"
        }
    },
    "402": {
        "No": "402",
        "Name": "Remove K Digits",
        "Link": "402-remove-k-digits",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "402-remove-k-digits.py"
        }
    },
    "410": {
        "No": "410",
        "Name": "Split Array Largest Sum Dp Binarysearch",
        "Link": "410-split-array-largest-sum-dp-binarysearch",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "410-split-array-largest-sum-dp.py"
        }
    },
    "416": {
        "No": "416",
        "Name": "Partition Equal Subset Sum Dp",
        "Link": "416-partition-equal-subset-sum-dp",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "416-partition-equal-subset-sum-dp.java"
        }
    },
    "417": {
        "No": "417",
        "Name": "Pacific Atlantic Water Flow 1",
        "Link": "417-pacific-atlantic-water-flow-1",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "417-pacific-atlantic-water-flow-simple.java"
        }
    },
    "424": {
        "No": "424",
        "Name": "Longest Repeating Character Replacement",
        "Link": "424-longest-repeating-character-replacement",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "424-longest-repeating-character-replacement.java",
            "Python": "424-longest-repeating-character-replacement.py"
        }
    },
    "438": {
        "No": "438",
        "Name": "Find All Anagrams In A String",
        "Link": "438-find-all-anagrams-in-a-string",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "438-find-all-anagrams-in-a-string.py"
        }
    },
    "448": {
        "No": "448",
        "Name": "Find All Numbers Disappeared In An Array",
        "Link": "448-find-all-numbers-disappeared-in-an-array",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "448-find-all-numbers-disappeared-in-an-array.java"
        }
    },
    "456": {
        "No": "456",
        "Name": "132 Pattern",
        "Link": "456-132-pattern",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "456-132-pattern.py"
        }
    },
    "494": {
        "No": "494",
        "Name": "Target Sum 2dp",
        "Link": "494-target-sum-2dp",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "494-target-sum-prefix.java"
        }
    },
    "506": {
        "No": "506",
        "Name": "Subarray Sum Equals K",
        "Link": "506-subarray-sum-equals-k",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "506-subarray-sum-equals-k.py"
        }
    },
    "516": {
        "No": "516",
        "Name": "Longest Palindromic Subsequence",
        "Link": "516-longest-palindromic-subsequence",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "516-longest-palindromic-subsequence.py"
        }
    },
    "518": {
        "No": "518",
        "Name": "Coin Change Ii",
        "Link": "518-coin-change-ii",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "518-coin-change-ii.java"
        }
    },
    "523": {
        "No": "523",
        "Name": "Continuous Subarray Sum",
        "Link": "523-continuous-subarray-sum",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "523-continuous-subarray-sum.py"
        }
    },
    "524": {
        "No": "524",
        "Name": "Longest Word In Dictionary Through Deleting",
        "Link": "524-longest-word-in-dictionary-through-deleting",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "524-longest-word-in-dictionary-through-deleting.java"
        }
    },
    "525": {
        "No": "525",
        "Name": "Contiguous Array",
        "Link": "525-contiguous-array",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "525-contiguous-array.java"
        }
    },
    "535": {
        "No": "535",
        "Name": "Encode And Decode Tinyurl",
        "Link": "535-encode-and-decode-tinyurl",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "535-encode-and-decode-tinyurl.py"
        }
    },
    "539": {
        "No": "539",
        "Name": "Minimum Time Difference",
        "Link": "539-minimum-time-difference",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "539-minimum-time-difference.java",
            "Python": "539-minimum-time-difference.py",
            "C++": "539-minimum-time-difference.cpp"
        }
    },
    "546": {
        "No": "546",
        "Name": "Remove Boxes",
        "Link": "546-remove-boxes",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "546-remove-boxes.java"
        }
    },
    "551": {
        "No": "551",
        "Name": "Student Attendance Record I",
        "Link": "551-student-attendance-record-i",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "551-student-attendance-record-i.java"
        }
    },
    "552": {
        "No": "552",
        "Name": "Student Attendance Record Ii Dynamic Programming",
        "Link": "552-student-attendance-record-ii-dynamic-programming",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "552-student-attendance-record-ii-dynamic-programming.java"
        }
    },
    "554": {
        "No": "554",
        "Name": "Brick Wall",
        "Link": "554-brick-wall",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "554-brick-wall.py"
        }
    },
    "567": {
        "No": "567",
        "Name": "Permutation In String",
        "Link": "567-permutation-in-string",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "567-permutation-in-string.java"
        }
    },
    "605": {
        "No": "605",
        "Name": "Can Place Flowers",
        "Link": "605-can-place-flowers",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "605-can-place-flowers.py"
        }
    },
    "647": {
        "No": "647",
        "Name": "Palindromic Substrings",
        "Link": "647-palindromic-substrings",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "647-palindromic-substrings.java"
        }
    },
    "658": {
        "No": "658",
        "Name": "Find K Closest Elements",
        "Link": "658-find-k-closest-elements",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "658-find-k-closest-elements.py"
        }
    },
    "665": {
        "No": "665",
        "Name": "Non Decreasing Array",
        "Link": "665-non-decreasing-array",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "665-non-decreasing-array.py"
        }
    },
    "682": {
        "No": "682",
        "Name": "Baseball Game",
        "Link": "682-baseball-game",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "682-baseball-game.py"
        }
    },
    "684": {
        "No": "684",
        "Name": "Redundant Connection Unit Find Alg",
        "Link": "684-redundant-connection-unit-find-alg",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "684-redundant-connection-unit-find-alg.java"
        }
    },
    "691": {
        "No": "691",
        "Name": "Stickers To Spell Word",
        "Link": "691-stickers-to-spell-word",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "691-stickers-to-spell-word.py"
        }
    },
    "695": {
        "No": "695",
        "Name": "Max Area Of Island",
        "Link": "695-max-area-of-island",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "695-max-area-of-island.java"
        }
    },
    "699": {
        "No": "699",
        "Name": "Falling Squares",
        "Link": "699-falling-squares",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "699-falling-squares.java"
        }
    },
    "715": {
        "No": "715",
        "Name": "Range Module Remove Range",
        "Link": "715-range-module-remove-range",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "715-range-module.java"
        }
    },
    "718": {
        "No": "718",
        "Name": "Maximum Length Of Repeated Subarray",
        "Link": "718-maximum-length-of-repeated-subarray",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "718-maximum-length-of-repeated-subarray.py"
        }
    },
    "720": {
        "No": "720",
        "Name": "Longest Word In Dictionary",
        "Link": "720-longest-word-in-dictionary",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "720-longest-word-in-dictionary.java"
        }
    },
    "729": {
        "No": "729",
        "Name": "My Calendar I",
        "Link": "729-my-calendar-i",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "729-my-calendar-i.java"
        }
    },
    "731": {
        "No": "731",
        "Name": "My Calendar Ii Treemap As Array",
        "Link": "731-my-calendar-ii-treemap-as-array",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "731-my-calendar-ii.java"
        }
    },
    "732": {
        "No": "732",
        "Name": "My Calendar Iii",
        "Link": "732-my-calendar-iii",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "732-my-calendar-iii.java"
        }
    },
    "735": {
        "No": "735",
        "Name": "Asteroid Collision",
        "Link": "735-asteroid-collision",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "735-asteroid-collision.py"
        }
    },
    "739": {
        "No": "739",
        "Name": "Daily Temperatures",
        "Link": "739-daily-temperatures",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "739-daily-temperatures.java"
        }
    },
    "743": {
        "No": "743",
        "Name": "Network Delay",
        "Link": "743-network-delay",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "743-network-delay.java"
        }
    },
    "764": {
        "No": "764",
        "Name": "Min Cost Climing Stairs",
        "Link": "764-min-cost-climing-stairs",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "764-min-cost-climing-stairs.java"
        }
    },
    "777": {
        "No": "777",
        "Name": "Swap Adjacent In Lr String",
        "Link": "777-swap-adjacent-in-lr-string",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "777-swap-adjacent-in-lr-string.java"
        }
    },
    "778": {
        "No": "778",
        "Name": "Swim In Rising Water",
        "Link": "778-swim-in-rising-water",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "778-swim-in-rising-water.py"
        }
    },
    "787": {
        "No": "787",
        "Name": "Cheapest Flights Within K Stops",
        "Link": "787-cheapest-flights-within-k-stops",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "787-cheapest-flights-within-k-stops.py"
        }
    },
    "792": {
        "No": "792",
        "Name": "Number Of Matching Subsequences Treeset",
        "Link": "792-number-of-matching-subsequences-treeset",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "792-number-of-matching-subsequences-treeset.java"
        }
    },
    "802": {
        "No": "802",
        "Name": "Find Eventual Safe State Dijistra",
        "Link": "802-find-eventual-safe-state-dijistra",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "802-find-eventual-safe-state-dp.py"
        }
    },
    "818": {
        "No": "818",
        "Name": "Race Car",
        "Link": "818-race-car",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "818-race-car.java"
        }
    },
    "834": {
        "No": "834",
        "Name": "Sum Of Distances In Tree",
        "Link": "834-sum-of-distances-in-tree",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "834-sum-of-distances-in-tree.java",
            "Python": "834-sum-of-distances-in-tree.py"
        }
    },
    "838": {
        "No": "838",
        "Name": "Push Dominoes",
        "Link": "838-push-dominoes",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "838-push-dominoes.py"
        }
    },
    "845": {
        "No": "845",
        "Name": "Longest Mountain In Array Basic",
        "Link": "845-longest-mountain-in-array-basic",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "845-longest-mountain-in-array-promotion.java"
        }
    },
    "853": {
        "No": "853",
        "Name": "",
        "Link": "853",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "853.py"
        }
    },
    "862": {
        "No": "862",
        "Name": "Shortest Subarray With Sum At Least K",
        "Link": "862-shortest-subarray-with-sum-at-least-k",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "862-shortest-subarray-with-sum-at-least-k.java"
        }
    },
    "875": {
        "No": "875",
        "Name": "Koko Eating Bananas",
        "Link": "875-koko-eating-bananas",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "875-koko-eating-bananas.java"
        }
    },
    "881": {
        "No": "881",
        "Name": "Boats To Save People",
        "Link": "881-boats-to-save-people",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "881-boats-to-save-people.py"
        }
    },
    "895": {
        "No": "895",
        "Name": "Maximum Frequency Stack",
        "Link": "895-maximum-frequency-stack",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "895-maximum-frequency-stack.java",
            "Python": "895-maximum-frequency-stack.py"
        }
    },
    "899": {
        "No": "899",
        "Name": "Orderly Queue",
        "Link": "899-orderly-queue",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "899-orderly-queue.py"
        }
    },
    "901": {
        "No": "901",
        "Name": "Online Stock Span",
        "Link": "901-online-stock-span",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "901-online-stock-span.py"
        }
    },
    "907": {
        "No": "907",
        "Name": "Sum Of Subarray Minimums Pq Timelimit",
        "Link": "907-sum-of-subarray-minimums-pq-timelimit",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "907-sum-of-subarray-minimums-stack.java"
        }
    },
    "913": {
        "No": "913",
        "Name": "Cat And Mouse Bottom Up Dan",
        "Link": "913-cat-and-mouse-bottom-up-dan",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "913-cat-and-mouse-bottom-up.java"
        }
    },
    "947": {
        "No": "947",
        "Name": "Most Stones Removed With Same Row Or Column",
        "Link": "947-most-stones-removed-with-same-row-or-column",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "947-most-stones-removed-with-same-row-or-column.java"
        }
    },
    "959": {
        "No": "959",
        "Name": "Regions Cut By Slashes Dan",
        "Link": "959-regions-cut-by-slashes-dan",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "959-regions-cut-by-slashes.java"
        }
    },
    "974": {
        "No": "974",
        "Name": "Subarray Sums Divisible By K",
        "Link": "974-subarray-sums-divisible-by-k",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "974-subarray-sums-divisible-by-k.java"
        }
    },
    "980": {
        "No": "980",
        "Name": "Unique Paths Iii Backtrack",
        "Link": "980-unique-paths-iii-backtrack",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "980-unique-paths-iii-backtrack.java"
        }
    },
    "994": {
        "No": "994",
        "Name": "Rotting Oranges",
        "Link": "994-rotting-oranges",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "994-rotting-oranges.java",
            "Python": "994-rotting-oranges.py"
        }
    },
    "1000": {
        "No": "1000",
        "Name": "Minimum Cost To Merge Stones",
        "Link": "1000-minimum-cost-to-merge-stones",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "1000-minimum-cost-to-merge-stones.java",
            "Python": "1000-minimum-cost-to-merge-stones.py"
        }
    },
    "1028": {
        "No": "1028",
        "Name": "Recover A Tree From Preorder Traversal",
        "Link": "1028-recover-a-tree-from-preorder-traversal",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "1028-recover-a-tree-from-preorder-traversal.py"
        }
    },
    "1029": {
        "No": "1029",
        "Name": "Remove All Adjacent Duplicates In String Ii",
        "Link": "1029-remove-all-adjacent-duplicates-in-string-ii",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "1029-remove-all-adjacent-duplicates-in-string-ii.py"
        }
    },
    "1076": {
        "No": "1076",
        "Name": "Number Of Submatrices That Sum To Target Hashmap Prefix",
        "Link": "1076-number-of-submatrices-that-sum-to-target-hashmap-prefix",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "1076-number-of-submatrices-that-sum-to-target-hashmap-prefix.py"
        }
    },
    "1094": {
        "No": "1094",
        "Name": "Car Pooling Fast",
        "Link": "1094-car-pooling-fast",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "1094-car-pooling.java"
        }
    },
    "1105": {
        "No": "1105",
        "Name": "",
        "Link": "1105",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "1105.py"
        }
    },
    "1110": {
        "No": "1110",
        "Name": "Delete Nodes And Return Forest",
        "Link": "1110-delete-nodes-and-return-forest",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "1110-delete-nodes-and-return-forest.java"
        }
    },
    "1123": {
        "No": "1123",
        "Name": "Lowest Common Ancestor Of Deepest Leaves",
        "Link": "1123-lowest-common-ancestor-of-deepest-leaves",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "1123-lowest-common-ancestor-of-deepest-leaves.py"
        }
    },
    "1129": {
        "No": "1129",
        "Name": "Shortest Path With Alternating Colors Dan",
        "Link": "1129-shortest-path-with-alternating-colors-dan",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "1129-shortest-path-with-alternating-colors.java"
        }
    },
    "1143": {
        "No": "1143",
        "Name": "Longest Common Subsequenc 2dDP",
        "Link": "1143-longest-common-subsequenc-2dDP",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "1143-longest-common-subsequenc-2dDP.java"
        }
    },
    "1146": {
        "No": "1146",
        "Name": "Snapshot Array Treemap",
        "Link": "1146-snapshot-array-treemap",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "1146-snapshot-array-treemap.java"
        }
    },
    "1153": {
        "No": "1153",
        "Name": "String Transforms Into Another String",
        "Link": "1153-string-transforms-into-another-string",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "1153-string-transforms-into-another-string.java"
        }
    },
    "1195": {
        "No": "1195",
        "Name": "Fizz Buzz Multithreaded Semaphore",
        "Link": "1195-fizz-buzz-multithreaded-semaphore",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "1195-fizz-buzz-multithreaded.java"
        }
    },
    "1218": {
        "No": "1218",
        "Name": "Longest Arithmetic Subsequence Of Given Difference",
        "Link": "1218-longest-arithmetic-subsequence-of-given-difference",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "1218-longest-arithmetic-subsequence-of-given-difference.py"
        }
    },
    "1255": {
        "No": "1255",
        "Name": "Maximum Score Words Formed By Letters",
        "Link": "1255-maximum-score-words-formed-by-letters",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "1255-maximum-score-words-formed-by-letters.py"
        }
    },
    "1268": {
        "No": "1268",
        "Name": "Search Suggestions System",
        "Link": "1268-search-suggestions-system",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "1268-search-suggestions-system.py"
        }
    },
    "1284": {
        "No": "1284",
        "Name": "Minimum Number Of Flips To Convert Binary Matrix To Zero Matrix",
        "Link": "1284-minimum-number-of-flips-to-convert-binary-matrix-to-zero-matrix",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "1284-minimum-number-of-flips-to-convert-binary-matrix-to-zero-matrix.py"
        }
    },
    "1293": {
        "No": "1293",
        "Name": "Shortest Path In A Grid With Obstacles Elimination",
        "Link": "1293-shortest-path-in-a-grid-with-obstacles-elimination",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "1293-shortest-path-in-a-grid-with-obstacles-elimination.py"
        }
    },
    "1299": {
        "No": "1299",
        "Name": "Replace Elements With Greatest Element On Right Side",
        "Link": "1299-replace-elements-with-greatest-element-on-right-side",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "1299-replace-elements-with-greatest-element-on-right-side.py"
        }
    },
    "1310": {
        "No": "1310",
        "Name": "",
        "Link": "1310",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "1310.py"
        }
    },
    "1312": {
        "No": "1312",
        "Name": "Minimum Insertion Steps To Make A String Palindrome Bitmask Tle",
        "Link": "1312-minimum-insertion-steps-to-make-a-string-palindrome-bitmask-tle",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "1312-minimum-insertion-steps-to-make-a-string-palindrome-dp.py"
        }
    },
    "1371": {
        "No": "1371",
        "Name": "Find The Longest Substring Containing Vowels In Even Counts",
        "Link": "1371-find-the-longest-substring-containing-vowels-in-even-counts",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "1371-find-the-longest-substring-containing-vowels-in-even-counts.py",
            "C++": "1371-find-the-longest-substring-containing-vowels-in-even-counts.cpp"
        }
    },
    "1402": {
        "No": "1402",
        "Name": "Reducing Dishes Greedy",
        "Link": "1402-reducing-dishes-greedy",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "1402-reducing-dishes-greedy.py"
        }
    },
    "1422": {
        "No": "1422",
        "Name": "Maximum Score After Splitting A String",
        "Link": "1422-maximum-score-after-splitting-a-string",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "1422-maximum-score-after-splitting-a-string.java"
        }
    },
    "1438": {
        "No": "1438",
        "Name": "Longest Continuous Subarray With Absolute Diff Less Than Or Equal To Limit Sliding Window",
        "Link": "1438-longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit-sliding-window",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "1438-longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit.java"
        }
    },
    "1442": {
        "No": "1442",
        "Name": "Count Triplets That Can Form Two Arrays Of Equal Xor",
        "Link": "1442-count-triplets-that-can-form-two-arrays-of-equal-xor",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "1442-count-triplets-that-can-form-two-arrays-of-equal-xor.java"
        }
    },
    "1461": {
        "No": "1461",
        "Name": "Check If A String Contains All Binary Codes Of Size K",
        "Link": "1461-check-if-a-string-contains-all-binary-codes-of-size-k",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "1461-check-if-a-string-contains-all-binary-codes-of-size-k.py"
        }
    },
    "1463": {
        "No": "1463",
        "Name": "Cherry Pickup Ii Dp",
        "Link": "1463-cherry-pickup-ii-dp",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "1463-cherry-pickup-ii.py"
        }
    },
    "1477": {
        "No": "1477",
        "Name": "Find Two Non Overlapping Sub Arrays Each With Target Sum Dp",
        "Link": "1477-find-two-non-overlapping-sub-arrays-each-with-target-sum-dp",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "1477-find-two-non-overlapping-sub-arrays-each-with-target-sum-out-of-memory.java"
        }
    },
    "1483": {
        "No": "1483",
        "Name": "Kth Ancestor Of Tree Node Binarylifting",
        "Link": "1483-kth-ancestor-of-tree-node-binarylifting",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "1483-kth-ancestor-of-tree-node-brutalforce.java"
        }
    },
    "1493": {
        "No": "1493",
        "Name": "Maximum Score Of A Good Subarray Dan",
        "Link": "1493-maximum-score-of-a-good-subarray-dan",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "1493-maximum-score-of-a-good-subarray-wrong.java"
        }
    },
    "1498": {
        "No": "1498",
        "Name": "Number Of Subsequences That Satisfy The Given Sum Condition",
        "Link": "1498-number-of-subsequences-that-satisfy-the-given-sum-condition",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "1498-number-of-subsequences-that-satisfy-the-given-sum-condition.py"
        }
    },
    "1499": {
        "No": "1499",
        "Name": "Max Value Of Equation",
        "Link": "1499-max-value-of-equation",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "1499-max-value-of-equation.py"
        }
    },
    "1522": {
        "No": "1522",
        "Name": "Diameter Of N Ary Tree",
        "Link": "1522-diameter-of-n-ary-tree",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "1522-diameter-of-n-ary-tree.java"
        }
    },
    "1524": {
        "No": "1524",
        "Name": "Number Of Sub Arrays With Odd Sum",
        "Link": "1524-number-of-sub-arrays-with-odd-sum",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "1524-number-of-sub-arrays-with-odd-sum.java"
        }
    },
    "1525": {
        "No": "1525",
        "Name": "Number Of Good Ways To Split A String",
        "Link": "1525-number-of-good-ways-to-split-a-string",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "1525-number-of-good-ways-to-split-a-string.py"
        }
    },
    "1548": {
        "No": "1548",
        "Name": "The Most Similar Path In A Graph Dp",
        "Link": "1548-the-most-similar-path-in-a-graph-dp",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "1548-the-most-similar-path-in-a-graph-dp.java"
        }
    },
    "1584": {
        "No": "1584",
        "Name": "Min Cost To Connect All Points Prim",
        "Link": "1584-min-cost-to-connect-all-points-prim",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "1584-min-cost-to-connect-all-points-prim.java",
            "Python": "1584-min-cost-to-connect-all-points.py"
        }
    },
    "1590": {
        "No": "1590",
        "Name": "Make Sum Divisible By P",
        "Link": "1590-make-sum-divisible-by-p",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "1590-make-sum-divisible-by-p.java"
        }
    },
    "1631": {
        "No": "1631",
        "Name": "Path With Minimum Effort",
        "Link": "1631-path-with-minimum-effort",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "1631-path-with-minimum-effort.java"
        }
    },
    "1632": {
        "No": "1632",
        "Name": "Rank Transform Of A Matrix",
        "Link": "1632-rank-transform-of-a-matrix",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "1632-rank-transform-of-a-matrix.java"
        }
    },
    "1641": {
        "No": "1641",
        "Name": "Count Sorted Vowel Strings",
        "Link": "1641-count-sorted-vowel-strings",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "1641-count-sorted-vowel-strings.py"
        }
    },
    "1654": {
        "No": "1654",
        "Name": "Minimum Jumps To Reach Home",
        "Link": "1654-minimum-jumps-to-reach-home",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "1654-minimum-jumps-to-reach-home.java",
            "Python": "1654-minimum-jumps-to-reach-home-dp.py"
        }
    },
    "1674": {
        "No": "1674",
        "Name": "Minimum Moves To Make Array Complementary",
        "Link": "1674-minimum-moves-to-make-array-complementary",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "1674-minimum-moves-to-make-array-complementary.py",
            "C++": "1674-minimum-moves-to-make-array-complementary.cpp"
        }
    },
    "1676": {
        "No": "1676",
        "Name": "Lowest Common Ancestor Of A Binary Tree Iv",
        "Link": "1676-lowest-common-ancestor-of-a-binary-tree-iv",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "1676-lowest-common-ancestor-of-a-binary-tree-iv.py"
        }
    },
    "1740": {
        "No": "1740",
        "Name": "Find Distance In A Binary Tree",
        "Link": "1740-find-distance-in-a-binary-tree",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "1740-find-distance-in-a-binary-tree.py"
        }
    },
    "1774": {
        "No": "1774",
        "Name": "Closest Dessert Cost",
        "Link": "1774-closest-dessert-cost",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "1774-closest-dessert-cost.java"
        }
    },
    "1776": {
        "No": "1776",
        "Name": "Car Fleet II Monotonic Stack",
        "Link": "1776-car-fleet-II-monotonic-stack",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "1776-car-fleet-II.java"
        }
    },
    "1782": {
        "No": "1782",
        "Name": "Count Pairs Of Nodes",
        "Link": "1782-count-pairs-of-nodes",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "1782-count-pairs-of-nodes.java"
        }
    },
    "1786": {
        "No": "1786",
        "Name": "Number Of Restricted Paths From First To Last Node",
        "Link": "1786-number-of-restricted-paths-from-first-to-last-node",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "1786-number-of-restricted-paths-from-first-to-last-node.java"
        }
    },
    "1825": {
        "No": "1825",
        "Name": "Finding Mk Average",
        "Link": "1825-finding-mk-average",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "1825-finding-mk-average.java"
        }
    },
    "1834": {
        "No": "1834",
        "Name": "Single Threaded Cpu",
        "Link": "1834-single-threaded-cpu",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "1834-single-threaded-cpu.java"
        }
    },
    "1838": {
        "No": "1838",
        "Name": "Frequency Of The Most Frequent Element",
        "Link": "1838-frequency-of-the-most-frequent-element",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "1838-frequency-of-the-most-frequent-element.py"
        }
    },
    "1851": {
        "No": "1851",
        "Name": "Minimum Interval To Include Each Query",
        "Link": "1851-minimum-interval-to-include-each-query",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "1851-minimum-interval-to-include-each-query.java"
        }
    },
    "1888": {
        "No": "1888",
        "Name": "Minimum Number Of Flips To Make The Binary String Alternating",
        "Link": "1888-minimum-number-of-flips-to-make-the-binary-string-alternating",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "1888-minimum-number-of-flips-to-make-the-binary-string-alternating.java",
            "Python": "1888-minimum-number-of-flips-to-make-the-binary-string-alternating.py"
        }
    },
    "1898": {
        "No": "1898",
        "Name": "Maximum Number Of Removable Characters",
        "Link": "1898-maximum-number-of-removable-characters",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "1898-maximum-number-of-removable-characters.py"
        }
    },
    "1923": {
        "No": "1923",
        "Name": "Longest Common Subpath Rolling Hash Map",
        "Link": "1923-longest-common-subpath-rolling-hash-map",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "1923-longest-common-subpath-rolling-hash-map.py"
        }
    },
    "1930": {
        "No": "1930",
        "Name": "Unique Length 3 Palindromic Subsequences",
        "Link": "1930-unique-length-3-palindromic-subsequences",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "1930-unique-length-3-palindromic-subsequences.py"
        }
    },
    "1937": {
        "No": "1937",
        "Name": "Maximum Number Of Points With Cost",
        "Link": "1937-maximum-number-of-points-with-cost",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "1937-maximum-number-of-points-with-cost.java"
        }
    },
    "1944": {
        "No": "1944",
        "Name": "Number Of Visible People In A Queue",
        "Link": "1944-number-of-visible-people-in-a-queue",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "1944-number-of-visible-people-in-a-queue.py"
        }
    },
    "1963": {
        "No": "1963",
        "Name": "Minimum Number Of Swaps To Make The String Balanced",
        "Link": "1963-minimum-number-of-swaps-to-make-the-string-balanced",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "1963-minimum-number-of-swaps-to-make-the-string-balanced.py"
        }
    },
    "1967": {
        "No": "1967",
        "Name": "Array With Elements Not Equal To Average Of Neighbors",
        "Link": "1967-array-with-elements-not-equal-to-average-of-neighbors",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "1967-array-with-elements-not-equal-to-average-of-neighbors.py"
        }
    },
    "1981": {
        "No": "1981",
        "Name": "Minimize The Difference Between Target And Chosen Elements Greedy",
        "Link": "1981-minimize-the-difference-between-target-and-chosen-elements-greedy",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "1981-minimize-the-difference-between-target-and-chosen-elements.java"
        }
    },
    "1993": {
        "No": "1993",
        "Name": "Operations On Tree",
        "Link": "1993-operations-on-tree",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "1993-operations-on-tree.py"
        }
    },
    "1996": {
        "No": "1996",
        "Name": "The Number Of Weak Characters In The Game",
        "Link": "1996-the-number-of-weak-characters-in-the-game",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "1996-the-number-of-weak-characters-in-the-game.java"
        }
    },
    "2001": {
        "No": "2001",
        "Name": "Number Of Pairs Of Interchangeable Rectangles",
        "Link": "2001-number-of-pairs-of-interchangeable-rectangles",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "2001-number-of-pairs-of-interchangeable-rectangles.py"
        }
    },
    "2002": {
        "No": "2002",
        "Name": "Maximum Product Of The Length Of Two Palindromic Subsequences",
        "Link": "2002-maximum-product-of-the-length-of-two-palindromic-subsequences",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "2002-maximum-product-of-the-length-of-two-palindromic-subsequences.py"
        }
    },
    "2017": {
        "No": "2017",
        "Name": "Grid Game",
        "Link": "2017-grid-game",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "2017-grid-game.py"
        }
    },
    "2034": {
        "No": "2034",
        "Name": "Stock Price Fluctuation",
        "Link": "2034-stock-price-fluctuation",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "2034-stock-price-fluctuation.java"
        }
    },
    "2049": {
        "No": "2049",
        "Name": "Count Nodes With The Highest Score",
        "Link": "2049-count-nodes-with-the-highest-score",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "2049-count-nodes-with-the-highest-score.java"
        }
    },
    "2050": {
        "No": "2050",
        "Name": "Parallel Courses Iii",
        "Link": "2050-parallel-courses-iii",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "2050-parallel-courses-iii.py"
        }
    },
    "2092": {
        "No": "2092",
        "Name": "Find All People With Secret",
        "Link": "2092-find-all-people-with-secret",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "2092-find-all-people-with-secret.py"
        }
    },
    "2096": {
        "No": "2096",
        "Name": "Step By Step Directions From Binary Tree Node List",
        "Link": "2096-step-by-step-directions-from-binary-tree-node-list",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "2096-step-by-step-directions-from-binary-tree-node-string.java",
            "Python": "2096-step-by-step-directions-from-a-binary-tree-node-to-another.py"
        }
    },
    "2101": {
        "No": "2101",
        "Name": "Detonate The Maximum Bombs",
        "Link": "2101-detonate-the-maximum-bombs",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "2101-detonate-the-maximum-bombs.py"
        }
    },
    "2102": {
        "No": "2102",
        "Name": "Sequentially Ordinal Rank Tracker Binarysearch",
        "Link": "2102-sequentially-ordinal-rank-tracker-binarysearch",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "2102-sequentially-ordinal-rank-tracker-hashset.java"
        }
    },
    "2104": {
        "No": "2104",
        "Name": "Sum Of Subarray Ranges",
        "Link": "2104-sum-of-subarray-ranges",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "2104-sum-of-subarray-ranges.java"
        }
    },
    "2115": {
        "No": "2115",
        "Name": "Find All Possible Recipes From Given Supplies",
        "Link": "2115-find-all-possible-recipes-from-given-supplies",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "2115-find-all-possible-recipes-from-given-supplies.java"
        }
    },
    "2136": {
        "No": "2136",
        "Name": "Earliest Possible Day Of Full Bloom",
        "Link": "2136-earliest-possible-day-of-full-bloom",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "2136-earliest-possible-day-of-full-bloom.py"
        }
    },
    "2233": {
        "No": "2233",
        "Name": "Maximum Product After K Increments Pq",
        "Link": "2233-maximum-product-after-k-increments-pq",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "2233-maximum-product-after-k-increments-pq.java"
        }
    },
    "2234": {
        "No": "2234",
        "Name": "Maximum Total Beauty Of The Gardens",
        "Link": "2234-maximum-total-beauty-of-the-gardens",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "2234-maximum-total-beauty-of-the-gardens.java"
        }
    },
    "2242": {
        "No": "2242",
        "Name": "Maximum Score Of A Node Sequence Edges Dan",
        "Link": "2242-maximum-score-of-a-node-sequence-edges-dan",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "2242-maximum-score-of-a-node-sequence-nodes.java"
        }
    },
    "2251": {
        "No": "2251",
        "Name": "Number Of Flowers In Full Bloom Map",
        "Link": "2251-number-of-flowers-in-full-bloom-map",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "2251-number-of-flowers-in-full-bloom-prefix copy.java"
        }
    },
    "2271": {
        "No": "2271",
        "Name": "Maximum White Tiles Covered By A Carpet Slidng Window",
        "Link": "2271-maximum-white-tiles-covered-by-a-carpet-slidng-window",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "2271-maximum-white-tiles-covered-by-a-carpet-slidng-window.java"
        }
    },
    "2272": {
        "No": "2272",
        "Name": "Substring With Largest Variance",
        "Link": "2272-substring-with-largest-variance",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "2272-substring-with-largest-variance.java",
            "Python": "2272-substring-with-largest-variance.py"
        }
    },
    "2276": {
        "No": "2276",
        "Name": "Count Integers In Intervals Review",
        "Link": "2276-count-integers-in-intervals-review",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "2276-count-integers-in-intervals.java"
        }
    },
    "2280": {
        "No": "2280",
        "Name": "Minimum Lines To Represent A Line Chart",
        "Link": "2280-minimum-lines-to-represent-a-line-chart",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "2280-minimum-lines-to-represent-a-line-chart.java"
        }
    },
    "2289": {
        "No": "2289",
        "Name": "Steps To Make Array Non Decreasing",
        "Link": "2289-steps-to-make-array-non-decreasing",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "2289-steps-to-make-array-non-decreasing.py"
        }
    },
    "2290": {
        "No": "2290",
        "Name": "Minimum Obstacle Removal To Reach Corner",
        "Link": "2290-minimum-obstacle-removal-to-reach-corner",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "2290-minimum-obstacle-removal-to-reach-corner.py"
        }
    },
    "2311": {
        "No": "2311",
        "Name": "Longest Binary Subsequence Less Than Or Equal To K Count01",
        "Link": "2311-longest-binary-subsequence-less-than-or-equal-to-k-count01",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "2311-longest-binary-subsequence-less-than-or-equal-to-k.java"
        }
    },
    "2370": {
        "No": "2370",
        "Name": "Longest Ideal Subsequence",
        "Link": "2370-longest-ideal-subsequence",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "2370-longest-ideal-subsequence.java"
        }
    },
    "2400": {
        "No": "2400",
        "Name": "Number Of Ways To Reach A Position After Exactly K Steps",
        "Link": "2400-number-of-ways-to-reach-a-position-after-exactly-k-steps",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "2400-number-of-ways-to-reach-a-position-after-exactly-k-steps.java"
        }
    },
    "2401": {
        "No": "2401",
        "Name": "Longest Nice Subarray",
        "Link": "2401-longest-nice-subarray",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "2401-longest-nice-subarray.py"
        }
    },
    "2402": {
        "No": "2402",
        "Name": "Meeting Rooms Iii",
        "Link": "2402-meeting-rooms-iii",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "2402-meeting-rooms-iii.java"
        }
    },
    "2406": {
        "No": "2406",
        "Name": "Divide Intervals Into Minimum Number Of Groups",
        "Link": "2406-divide-intervals-into-minimum-number-of-groups",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "2406-divide-intervals-into-minimum-number-of-groups.java"
        }
    },
    "2421": {
        "No": "2421",
        "Name": "Number Of Good Paths",
        "Link": "2421-number-of-good-paths",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "2421-number-of-good-paths.py"
        }
    },
    "2444": {
        "No": "2444",
        "Name": "Count Subarrays With Fixed Bounds",
        "Link": "2444-count-subarrays-with-fixed-bounds",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "2444-count-subarrays-with-fixed-bounds.py"
        }
    },
    "2449": {
        "No": "2449",
        "Name": "Minimum Number Of Operations To Make Arrays Similar",
        "Link": "2449-minimum-number-of-operations-to-make-arrays-similar",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "2449-minimum-number-of-operations-to-make-arrays-similar.py"
        }
    },
    "2461": {
        "No": "2461",
        "Name": "Maximum Sum Of Distinct Subarrays With Length K",
        "Link": "2461-maximum-sum-of-distinct-subarrays-with-length-k",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "2461-maximum-sum-of-distinct-subarrays-with-length-k.py"
        }
    },
    "2478": {
        "No": "2478",
        "Name": "Number Of Beautiful Partitions Dan",
        "Link": "2478-number-of-beautiful-partitions-dan",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "2478-number-of-beautiful-partitions.java"
        }
    },
    "2509": {
        "No": "2509",
        "Name": "Cycle Length Queries In A Tree",
        "Link": "2509-cycle-length-queries-in-a-tree",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Java": "2509-cycle-length-queries-in-a-tree.java"
        }
    },
    "2516": {
        "No": "2516",
        "Name": "Take K Of Each Character From Left And Right",
        "Link": "2516-take-k-of-each-character-from-left-and-right",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "2516-take-k-of-each-character-from-left-and-right.py"
        }
    },
    "2538": {
        "No": "2538",
        "Name": "Difference Between Maximum And Minimum Price Sum",
        "Link": "2538-difference-between-maximum-and-minimum-price-sum",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "2538-difference-between-maximum-and-minimum-price-sum.py"
        }
    },
    "2896": {
        "No": "2896",
        "Name": "Apply Operations To Make Two Strings Equal",
        "Link": "2896-apply-operations-to-make-two-strings-equal",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "2896-apply-operations-to-make-two-strings-equal.py"
        }
    },
    "2900": {
        "No": "2900",
        "Name": "",
        "Link": "2900",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "2900.py"
        }
    },
    "2911": {
        "No": "2911",
        "Name": "",
        "Link": "2911",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "2911.py"
        }
    },
    "3000": {
        "No": "3000",
        "Name": "",
        "Link": "3000",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "3000.py"
        }
    },
    "3180": {
        "No": "3180",
        "Name": "",
        "Link": "3180",
        "Level": "-",
        "Tags": "-",
        "Solutions": {
            "Python": "3180.py"
        }
    }
}